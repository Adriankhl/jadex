<?xml version="1.0" encoding="UTF-8"?>

	<!--
		Document : AutomatedSimulation.xml Created on : 17. Dezember 2009,
		17:25 Updated on: 15-1-10, 19h Author : vilenica Description: Purpose
		of the document follows.
	-->



<SimulationConfiguration name="MarsWorldExperiments"
	applicationReference="..\\sodekovs-simulationcontrol\\target\\classes\\jadex\\simulation\\examples\\marsworld\\MarsWorld4SimulationExperiments.application.xml"
	applicationConfiguration="1 Sentry / 2 Producers / 3 Carries">
	<!--
		<SimulationConfiguration name="MarsWorldExperiments"
		applicationReference="..\\jadex-applications-bdi\\target\\classes\\jadex\\bdi\\examples\\marsworld\MarsWorld.application.xml"
		applicationConfiguration="1 Sentry / 2 Producers / 3 Carries">
	-->
	<Observers>
		<!--
			<Observer> <Data name="StepLogger"> <ObjectSource type="BDI_Agent"
			name="Sentry" /> <ElementSource type="BDI_BELIEF" name="myPos"
			class="String" /> </Data> <Evaluation mode="periodical" value="1000"
			/> <Filter mode="all" /> </Observer>
		-->
		<Observer>
			<Data name="HomebaseLogger"><!-- TODO: How to deal with Strings, Lists? -->
				<ObjectSource type="ISpaceObject" name="homebase" />
				<ElementSource type="Property" name="ore" class="String" />
				<!-- Add type of element: String, long, int etc.? -->
			</Data>
			<Evaluation mode="onChange" />
			<!-- If perdiocal, all have to have the same value-->
			<Filter mode="all" /> <!-- All / one / subset of objects-JavaCondLanguage -->
		</Observer>

		<Dataproviders>
			<Dataprovider name="homebaselogger2">
				<Source name="$ore" sourcetype="ISpaceObject" objecttype="homebase"
					aggregate="false">$object.ore</Source>
				<Data name="ore">$ore</Data>
			</Dataprovider>
		</Dataproviders>

		<Observer>




			<Dataprovider name="unhappiness">
				<env:source name="$heatbug" objecttype="heatbug" /> <!-- All / one / subset of objects -->
				<env:source name="$unhappinesses" objecttype="heatbug"
					aggregate="true">$object.unhappiness</env:source>
				<env:data name="time">$tick</env:data>
				<env:data name="id">$heatbug.getId()</env:data>
				<env:data name="unhappiness">$heatbug.unhappiness</env:data>
				<env:data name="avg_unhappiness">SFunction.mean($unhappinesses)</env:data>
			</env:dataprovider>



				<Observer>
					<Data name="ExperimentDuration"><!-- TODO: How to deal with Strings, Lists? -->
						<ObjectSource type="ISpaceObject" name="homebase" />
						<ElementSource type="Property" name="duration"
							class="String" />
						<!-- Add type of element: String, long, int etc.? -->
					</Data>
					<Evaluation mode="onChange" />
					<!-- If perdiocal, all have to have the same value-->
					<Filter mode="last" /> <!-- All / one / subset of objects-JavaCondLanguage -->
					<!--
						"last" denotes, that only the last value is of interest, like for
						the duration time.
					-->
				</Observer>
				<!--
					<Observer> <Data name="11HomebaseLogger"> <ObjectSource
					type="ISpa222ceObject" name="homebase"/> <ElementSource
					type="Pro222perty" name="ore" class="String"/> </Data> <Evaluation
					mode="2onChange"/> <Filter mode="2all"/> </Observer>
				-->
	</Observers>

	<DataVisualization>
		<Input>Reference to a data-field of the observers</Input>
		<Function name="MeanValue" aggregate="all" />
		<!-- DiagramType, Aggregation of different data, text on x/y-axis-->
	</DataVisualization>

	<!-- Optional: -->
	<Persist>
		<!-- Options: Wich filenName, Type, DB-Connector etc.-->
	</Persist>

	<Optimization>
		<!--
			Der Wert dieses Parameters gehört dann auf jeden Fall in die
			LogDatei.
		-->
		<!-- TODO: Nesting of Parameters! -->
		<!--<Data name="PheromoneDiffusion"> -->
		<!--
			Referenz auf oben oder neues
		-->
		<!--
			<ObjectSource type="ISpaceObject" name="Pheromone"/> <ElementSource
			type="Property" name="Diffusion" class="Int"/>
		--><!-- Add type of element: String, long, int etc.? -->
		<!--</Data>-->
		<Data name="NumberOfSentries"> <!-- Referenz to $args.value in application.xml -->
			<ObjectSource type="BDI_Agent" name="Sentry" />
			<ElementSource type="AgentNumber" name="AgentNumber"
				class="Int" /><!-- Add type of element: String, long, int etc.? -->
		</Data>
		<!-- Important: Number of sweeps has to be equal with number of rows!-->
		<ParameterSweeping type="space"> <!-- space, list or algorithm (algorithm is not implemented yet!)-->
			<Configuration start="5" end="6" step="1" class="int" />
			<!-- 			<Configuration values="12;17;28;33;"/>--> <!-- Has to be comma separated list, with a comma as last character. -->
		</ParameterSweeping>
		<Algorithm>
			<Input></Input>
			<Configuration></Configuration>
		</Algorithm>
	</Optimization>

	<RunConfiguration>
		<General rows="9" parallelRuns="2" delta="true"><!-- For all runs.-->
			<!-- Delay of start time can be defined relatively or absolute.-->
			<!-- <StartTime value="2010-06-29 10:50:00" type="absolute" /> -->
			<!--<StartTime value="6500" type="relative" />-->

			<!--
				delta=um bei paralleler Ausführung zu Verhindern, dass Seeds von
				Randoms gleich sind.
			-->
			<TerminateCondition>
				<Time value="7000" type="absolute" />
			</TerminateCondition>
		</General>
		<Rows experiments="50">
			<TerminateCondition>
				<Time value="5000" type="relative" />
				<!--
					<TargetFunction function="$object.getProperty(&quot;ore&quot;) >=
					10">
				-->
				<!--
					<TargetFunction function="$beliefbase.tmpCounter>= 13">
					<ObjectSource type="BDI_AGENT" name="Sentry" /> </TargetFunction>
				-->
			</TerminateCondition>
		</Rows>
	</RunConfiguration>
</SimulationConfiguration>