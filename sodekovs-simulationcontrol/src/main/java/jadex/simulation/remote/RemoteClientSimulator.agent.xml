
	<!--
		<H3>Environment / Observer Agent</H3> Used to maintain the GUI /
		Observer.
	-->

<agent xmlns="http://jadex.sourceforge.net/jadex-bdi" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="RemoteClientSimulator" package="jadex.simulation.remote">

	<imports>
		<import>jadex.base.contextservice.*</import>
		<import>jadex.base.appdescriptor.*</import>
		<import>jadex.base.envsupport.environment.space2d.*</import>
		<import>jadex.base.envsupport.environment.*</import>
		<import>jadex.base.envsupport.math.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.simulation.model.Observer</import>
		<import>jadex.simulation.client.*</import>
		<import>jadex.application.space.envsupport.environment.*</import>
	</imports>									


	<capabilities>
		<!--
			this capability provides easy access to "out-of-the-box"-plans
			allowing - for example - to register at the DF.
		-->
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF" />
	</capabilities>

	<beliefs>
		<!-- Map contains all facts related to this simulation run.-->
		<belief name="simulationFacts" class="Map">
			<fact>new HashMap()</fact>
		</belief>
		
		<belief name="observedEventsMap" class="HashMap">
			<fact>new HashMap()</fact>
		</belief>
		
		<belief name="myName" class="String">
			<fact>"dellPC"</fact>
		</belief>

	</beliefs>

	<goals>
		<!-- Used to search for the masters simulation agent. -->
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search" />
		</achievegoalref>

		<!--
			Dispatch Goal that creates observers that execute the observation
			periodically
		-->
		<achievegoal name="InitPeriodicalObservers">
			<parameter name="periodicalObserversList" class="List" />
		</achievegoal>

		<!-- Dispatch Goal that registers listeners for the objects -->
		<achievegoal name="InitOnChangeObservers">
			<parameter name="onChangeObserversList" class="List" />
		</achievegoal>

	</goals>

	<plans>		<!--			Responsible for all aspects related to the run of the simulation,			especially to monitor the terminate condition.		-->
		<plan name="runtime_manager">
			<body class="RuntimeManagerPlan" />
		</plan>		
	</plans>

	<events>
		<!--  Send result of simulation to master agent. -->
		<messageevent name="inform_master_agent" type="fipa"
			direction="send">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.JADEX_XML</value>
			</parameter>
		</messageevent>
	</events>


	<properties>
		<!--
			The environment may throw exceptions when executing property
			listeners and these listeners are not valid any longer. This leads to
			normal plan failure and can therefore be ignored.
		-->
		<property name="logging.level">java.util.logging.Level.WARNING</property>
		<property name="debugging">false</property>
	</properties>

	<services>
		<offeredservice class="IRemoteSimulationExecutionService">new RemoteSimulationExecutionService($scope.getExternalAccess(), "betaTest01")</offeredservice>
	</services>
			
	<configurations>
		<configuration name="default">
			<goals>
				<!--  <initialgoal ref="updateEnv" />-->
			</goals>
			<plans>
			<!-- <initialplan ref="runtime_manager" />-->
				<!-- <initialplan ref="init_observers" /> -->
			</plans>
		</configuration>
	</configurations>
</agent>