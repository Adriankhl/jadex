<!--
	<H3>The manager agent for starting the application.</H3>

	Can be used to start the booktrading example with different
	initial configurations of buyer and seller agents.

-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-2.0.xsd"
	   name="Manager"
	   package="jadex.bdi.examples.booktrading.manager">

	<imports>
		<import>jadex.bdi.planlib.starter.*</import>
		<import>jadex.bdi.examples.booktrading.common.*</import>
		<import>java.util.*</import>
		<import>jadex.bridge.IClockService</import>
	</imports>
	
	<capabilities>
		<capability name="startcap" file="jadex.bdi.planlib.starter.StartAgents"/>
		<!-- <capability name="amscap" file="jadex.bdi.planlib.ams.AMS"/> -->
	</capabilities>

	<goals>
		<achievegoalref name="start_agents">
			<concrete ref="startcap.start_agents"/>
		</achievegoalref>
		
		<!-- Goal used to kill manager after startup. -->
		<!-- <achievegoalref name="ams_destroy_agent">
			<concrete ref="amscap.ams_destroy_agent"/>
		</achievegoalref> -->
	</goals>

	<properties>
<!--		<property name="debugging">true</property>-->
	</properties>

	<configurations>
		<configuration name="One buyer / one seller">
			<goals>
				<initialgoal ref="start_agents">
					<parameterset ref="agentinfos">
						<value>
							new StartAgentInfo("jadex/bdi/examples/booktrading/buyer/Buyer.agent.xml", "Alex", 0, new String[]{"initial_orders"},
							new Object[]{new Order[]
							{
								new Order("All about agents", new Date($scope.getTime()+60000), 100, 120, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("All about web services", new Date($scope.getTime()+60000), 40, 60, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Harry Potter", new Date($scope.getTime()+60000), 5, 10, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Agents in the real world", new Date($scope.getTime()+60000), 30, 65, true, (IClockService)$scope.getPlatform().getService(IClockService.class))
							}})
						</value>
						<value>
							new StartAgentInfo("jadex/bdi/examples/booktrading/seller/Seller.agent.xml", "Lars", 0, new String[]{"initial_orders"},
							new Object[]{new Order[]
							{
								new Order("All about agents", new Date($scope.getTime()+60000), 130, 110, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("All about web services", new Date($scope.getTime()+60000), 50, 30, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Harry Potter", new Date($scope.getTime()+60000), 15, 9, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Agents in the real world", new Date($scope.getTime()+60000), 100, 60, false, (IClockService)$scope.getPlatform().getService(IClockService.class))
							}})
						</value>
					</parameterset>
				</initialgoal>
				
				<!-- <initialgoal ref="ams_destroy_agent">
					<parameter ref="agentidentifier">
						<value>$scope.getAgentIdentifier()</value>
					</parameter>
				</initialgoal> -->
			</goals>
		</configuration>
		
		<configuration name="One buyer / two sellers">
			<goals>
				<initialgoal ref="start_agents">
					<parameterset ref="agentinfos">
						<value>
							new StartAgentInfo("jadex/bdi/examples/booktrading/buyer/Buyer.agent.xml", "Alex", 0, new String[]{"initial_orders"},
							new Object[]{new Order[]
							{
								new Order("All about agents", new Date($scope.getTime()+60000), 100, 120, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("All about web services", new Date($scope.getTime()+60000), 40, 60, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Harry Potter", new Date($scope.getTime()+60000), 5, 10, true, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Agents in the real world", new Date($scope.getTime()+60000), 30, 65, true, (IClockService)$scope.getPlatform().getService(IClockService.class))
							}})
						</value>
						<value>
							new StartAgentInfo("jadex/bdi/examples/booktrading/seller/Seller.agent.xml", "Lars", 0, new String[]{"initial_orders"},
							new Object[]{new Order[]
							{
								new Order("All about agents", new Date($scope.getTime()+60000), 130, 110, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("All about web services", new Date($scope.getTime()+60000), 50, 30, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Harry Potter", new Date($scope.getTime()+60000), 12, 6, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Agents in the real world", new Date($scope.getTime()+60000), 100, 60, false, (IClockService)$scope.getPlatform().getService(IClockService.class))
							}})
						</value>
						<value>
							new StartAgentInfo("jadex/bdi/examples/booktrading/seller/Seller.agent.xml", "Dirk", 0, new String[]{"initial_orders"},
							new Object[]{new Order[]
							{
								new Order("All about agents", new Date($scope.getTime()+60000), 120, 100, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("All about web services", new Date($scope.getTime()+60000), 40, 20, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Harry Potter", new Date($scope.getTime()+60000), 16, 12, false, (IClockService)$scope.getPlatform().getService(IClockService.class)),
								new Order("Agents in the real world", new Date($scope.getTime()+60000), 100, 60, false, (IClockService)$scope.getPlatform().getService(IClockService.class))
							}})
						</value>
					</parameterset>
				</initialgoal>
				
				<!-- <initialgoal ref="ams_destroy_agent">
					<parameter ref="agentidentifier">
						<value>$scope.getAgentIdentifier()</value>
					</parameter>
				</initialgoal> -->
			</goals>
		</configuration>
	</configurations>

</agent>