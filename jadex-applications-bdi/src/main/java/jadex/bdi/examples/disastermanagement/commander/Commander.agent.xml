<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>Commander</H3>

	Coordinates entities to efficiently handle disasters.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="Commander"
	package="jadex.bdi.examples.disastermanagement.commander">

	<imports>
		<import>java.util.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.base.fipa.*</import>
		<import>jadex.application.runtime.*</import>
		<import>jadex.application.space.envsupport.environment.*</import>
		<import>jadex.application.space.envsupport.environment.space2d.*</import>
		<import>jadex.bdi.runtime.*</import>
		<import>jadex.bdi.examples.disastermanagement.*</import>
		<import>jadex.bdi.examples.disastermanagement.movement.*</import>
	</imports>

	<beliefs>
		<!-- Environment imported inherited from move capability. -->
		<belief name="environment" class="ContinuousSpace2D">
			<fact>(ContinuousSpace2D)((IApplicationExternalAccess)$scope.getParent()).getSpace("my2dspace")</fact>
		</belief>
		
		<beliefset name="disasters" class="ISpaceObject" updaterate="1000">
			<facts>$beliefbase.environment.getSpaceObjectsByType("disaster")</facts>
		</beliefset>
		
		<beliefset name="busy_entities" class="Object"/>
	</beliefs>

	<goals>
		<achievegoal name="handle_disaster">
			<parameter name="disaster" class="ISpaceObject">
				<value>$disaster</value>
			</parameter>
			<unique/>
			<!-- Create one goal for each known disaster. -->
			<creationcondition language="jcl">
				ISpaceObject $disaster &amp;&amp; $disaster.getType().equals("disaster")
			</creationcondition>
			<deliberation>
				<inhibits ref="handle_disaster">
					$goal.disaster.severe &amp;&amp; $ref.disaster.severe==false
				</inhibits>
			</deliberation>
			<targetcondition>
				!Arrays.asList($beliefbase.disasters).contains($goal.disaster)
			</targetcondition>
		</achievegoal>
	</goals>
	
	<plans>
		<!-- Plan for assigning units to a disaster. -->
		<plan name="handle_disaster_plan">
			<parameter name="disaster" class="ISpaceObject">
				<goalmapping ref="handle_disaster.disaster"/>
			</parameter>
			<body class="HandleDisasterPlan"/>
			<trigger>
				<goal ref="handle_disaster"/>
			</trigger>
		</plan>
	</plans>
	
	<services>
		<usedservice class="ITreatVictimsService"/>
		<usedservice class="IExtinguishFireService"/>
		<usedservice class="IClearChemicalsService"/>
	</services>
</agent>
