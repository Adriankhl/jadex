<!--
	<H3>The AntWorld application descriptor</H3>

	It can be started to launch an ant world scenario.
	This scenario will be used to apply and analyze different coordination strategies.
-->

<applicationtype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:env="http://jadex.sourceforge.net/jadex-env"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-appdescriptor 
	                    http://jadex.sourceforge.net/jadex-appdescriptor.xsd"
	name="AntCoordinationSpace" package="jadex.bdi.examples.antworld">
	
	<imports>
		<import>jadex.adapter.base.envsupport.environment.space2d.*</import>
		<import>jadex.adapter.base.envsupport.environment.RoundBasedExecutor</import>
		<import>jadex.adapter.base.envsupport.math.*</import>
		<import>jadex.bridge.IClockService</import>
		<import>jadex.adapter.base.envsupport.dataview.GeneralDataView2D</import>
		<import>jadex.adapter.base.envsupport.observer.perspective.*</import>
	</imports>
	
	<spacetypes>
		<env:envspacetype name="gc2dspace" width="15" height="15" class="Grid2D">
			<env:objecttypes>
				<env:objecttype name="ant"/>
				<env:objecttype name="destinationSign"/>
				<env:objecttype name="gravitationCenter"/>
				<env:objecttype name="gravitationField"/>
				<!-- The size of the objects decreases as time goes by.-->
				<env:objecttype name="traceRoute">
					<env:property name="size" dynamic="true">
						$object.getProperty("round") == null ? new Vector2Double(3.0,3.0) : new Vector2Double( Math.max(0.1,
				((20 - $object.getProperty("round"))/28.0)),
				Math.max(0.1,
				( (20 - $object.getProperty("round"))/28.0) )) <!--new
						Vector2Double(0.5,0.5)--> </env:property>
				</env:objecttype>
				
				<!--<env:objecttype name="house">
				<env:property name="size">new Vector2Double( Math.min(1.5,
				($object.getProperty("clock").getTick()-
				$object.getProperty("creation_age").doubleValue())/5.0),
				Math.min(1.5, ($object.getProperty("clock").getTick()-
				$object.getProperty("creation_age").doubleValue())/5.0) )
				</env:property>
				</env:objecttype>-->
				
			</env:objecttypes>
			
			<env:avatarmappings>
				<env:avatarmapping agenttype="Ant" objecttype="ant"/>					
				<!--<env:avatarmapping agenttype="Burner" objecttype="burner"/>-->
			</env:avatarmappings>
			
			<env:actiontypes>
				<!--<env:agentactiontype name="pickup" class="PickupWasteAction" />
				<env:agentactiontype name="drop" class="DropWasteAction" />
				<env:agentactiontype name="burn" class="BurnWasteAction" />-->
				<env:actiontype name="go" class="GoAction"/>
				<env:actiontype name="updateDestination"
					class="UpdateDestinationAction"/>
				<env:actiontype name="updateTraceRoute" class="TraceRouteAction"/>
				<env:actiontype name="absorbObject" class="AbsorbObjectAction"/>
			</env:actiontypes>
			
			<env:processtypes>
				<env:processtype name="createPackages" class="PackageProcess">
					<env:property name="rate">2</env:property>
				</env:processtype>
				<env:processtype name="manageGravitation"
					class="ManageGravitationProcess">
					<env:property name="rate">1</env:property>
				</env:processtype>
			</env:processtypes>
			
			<env:perceptgeneratortypes>
				<env:perceptgeneratortype name="antvisiongen"
					class="AntVisionGenerator"/>
				<env:perceptmapping agenttype="Ant" class="AntVisionProcessor">
					<!-- Todo: mapping per percept type? - ->
					<env:percepttype name="garbage_appeared"/>
					<env:percepttype name="garbage_disappeared"/> -->
				</env:perceptmapping>
			</env:perceptgeneratortypes>
			
			<env:views>
				<env:view name="view_all" class="GeneralDataView2D">
				</env:view>
			</env:views>
			
			<env:perspectives>
				<env:perspective name="icons" class="Perspective2D">
					<!--<env:drawable objecttype="collector" width="0.9" height="0.9">
					<env:texturedrectangle layer="2"
					imagepath="jadex/bdi/examples/garbagecollector2/images/collector.png"/>
					<env:texturedrectangle layer="3" width="0.5" height="0.5"
					x="0.3" y="-0.2"
					imagepath="jadex/bdi/examples/garbagecollector2/images/garbage.png">
					<env:drawcondition>
					$object.getProperty("garbage")!=null</env:drawcondition>
					</env:texturedrectangle>
					</env:drawable>-->
					
					<env:drawable objecttype="ant" width="0.9" height="0.9">
						<env:texturedrectangle layer="2"
							imagepath="jadex/bdi/examples/antworld/images/ant1.png"/>
					</env:drawable>
					
					<env:drawable objecttype="destinationSign" width="0.6"
						height="0.6">
						<env:texturedrectangle layer="1"
							imagepath="jadex/bdi/examples/antworld/images/destination.png"/>
					</env:drawable>
					
					<env:drawable objecttype="traceRoute" width="1.0" height="1.0">
						<env:texturedrectangle layer="0" size="size"
							imagepath="jadex/bdi/examples/antworld/images/traceroute.png"/>
					</env:drawable>
					
					<env:drawable objecttype="gravitationCenter" width="1.0"
						height="1.0">
						<env:texturedrectangle layer="3"
							imagepath="jadex/bdi/examples/antworld/images/gravitationCenter.png"/>
					</env:drawable>
					
					<env:drawable objecttype="gravitationField" width="1.0"
						height="1.0">
						<env:texturedrectangle layer="3"
							imagepath="jadex/bdi/examples/antworld/images/gravitationField.png"/>
					</env:drawable>
					
					<env:prelayers>
						<env:tiledlayer width="3.5" height="3.5"
							imagepath="jadex/bdi/examples/antworld/images/bg.png"/>
						<env:gridlayer width="1.0" height="1.0" color="WHITE"/>
					</env:prelayers>
				</env:perspective>
				
				<!--<env:perspective name="abstract">
				<env:drawable objecttype="collector" width="1.0" height="1.0">
				<env:triangle layer="2" color="RED" />
				<env:rectangle layer="3" color="YELLOW" width="0.2" height="0.2">
				<env:drawcondition>$object.getProperty("garbage")!=null</env:drawcondition> 
				</env:rectangle>
				</env:drawable>
				<env:drawable objecttype="burner" width="1.0" height="1.0">
				<env:triangle layer="1" color="GREEN" />
				</env:drawable>
				<env:drawable objecttype="garbage" width="0.7" height="0.7">
				<env:rectangle layer="0" color="YELLOW" />
				</env:drawable>
				<env:prelayers>
				<env:gridlayer width="1.0" height="1.0" color="WHITE" />
				</env:prelayers>
				</env:perspective>-->
			</env:perspectives>
			
			<!-- executor -->
			<env:spaceexecutor>new RoundBasedExecutor($space,
				(IClockService)$platform.getService(IClockService.class))</env:spaceexecutor>
		</env:envspacetype>
	</spacetypes>
	
	<agenttypes>
		<agenttype name="Ant"
			filename="jadex/bdi/examples/antworld/Ant.agent.xml"/>
		
		
		<!--<agenttype name="Burner" filename="jadex/bdi/examples/garbagecollector2/GarbageBurner.agent.xml"/>-->
	</agenttypes>
	
	<applications>
		<application name="One Ant">
			<agents>
				<agent name="Ant1" type="Ant"/>
				<agent name="Ant2" type="Ant"/>
				<agent name="Ant3" type="Ant"/>				
				<agent name="Ant4" type="Ant"/>
				<agent name="Ant5" type="Ant"/>
			</agents>
			
			<env:envspace name="mygc2dspace" type="gc2dspace">
				<!-- <env:objects>
				<env:object type="collector" owner="Collector1" >
				<env:property name="rotation">
				$object.getProperty("lastmove")==null || $object.getProperty("lastmove").equals("right")? Math.PI:
				$object.getProperty("lastmove").equals("left")? Math.PI:
				$object.getProperty("lastmove").equals("up")? Math.PI/2:
				Math.PI*3/2
				</env:property>
				</env:object>
				<env:object type="burner" owner="Burner1" />
				</env:objects> -->
				
			<env:processes>
					<env:process type="createPackages">
						<env:property name="rate">2</env:property>
					</env:process>
				<env:process type="manageGravitation">
					<env:property name="rate">1</env:property>
				</env:process>
				</env:processes>
				
				<env:observers>
					<env:observer name="world" view="view_all"
						perspective="abstract">
						<env:plugins>
						</env:plugins>
					</env:observer>
				</env:observers>
			</env:envspace>
		</application>
		
		<!--<application name="One Burner / Two Collectors">
			<agents>
				<agent name="Collector2" type="Collector"/>
				<agent name="Collector1" type="Collector"/>
				<agent name="Burner1" type="Burner"/>
			</agents>
			
			<env:envspace name="mygc2dspace" type="gc2dspace">
				 <env:objects>
					<env:object type="collector" owner="Collector1" />
					<env:object type="collector" owner="Collector2" />
					<env:object type="burner" owner="Burner1" />
				</env:objects> 
				
				<env:observers>
					<env:observer name="world" view="view_all" perspective="abstract">
						<env:plugins>
						</env:plugins>
					</env:observer>
				</env:observers>
			</env:envspace>
		</application>-->
	</applications>

</applicationtype>
