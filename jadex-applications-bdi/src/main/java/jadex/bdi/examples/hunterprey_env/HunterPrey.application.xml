	<!--
	<H3>The hunter prey application descriptor</H3>

	Two kinds of creatures live on a grid world.
	Hunters try to catch the prey, while prey
	moves around looking for food.
-->

<applicationtype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:env="http://jadex.sourceforge.net/jadex-env"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-appdescriptor 
	                    http://jadex.sourceforge.net/jadex-appdescriptor.xsd"
	name="HunterPrey" package="jadex.bdi.examples.hunterprey_env">
	
	<imports>
		<import>jadex.adapter.base.envsupport.environment.space2d.*</import>
		<import>jadex.adapter.base.envsupport.environment.RoundBasedExecutor</import>
		<import>jadex.adapter.base.envsupport.math.*</import>
		<import>jadex.bridge.IClockService</import>
		<import>jadex.adapter.base.envsupport.dataview.*</import>
		<import>jadex.bdi.examples.hunterprey_env.dumbprey.*</import>
		<import>jadex.bdi.examples.hunterprey_env.dumbhunter.*</import>
		<import>jadex.adapter.base.envsupport.observer.perspective.*</import>
	</imports>
	
	<spacetypes>
		<env:envspacetype name="2dspace" class="Grid2D" width="30" height="30">
			<env:objecttypes>
				<env:objecttype name="hunter" />
				<env:objecttype name="prey" />
				<env:objecttype name="obstacle" />
				<env:objecttype name="food" >
					<env:property name="size" dynamic="true">
						new Vector2Double(
							Math.min(1, ($object.getProperty("clock").getTick()-
							$object.getProperty("creation_age").doubleValue())/32.0),
							Math.min(0.8, ($object.getProperty("clock").getTick()-
							$object.getProperty("creation_age").doubleValue())/40.0)
						)
					</env:property>
				</env:objecttype>
			</env:objecttypes>
			
			<env:avatarmappings>
				<env:avatarmapping agenttype="DumbPrey" objecttype="prey"/>
				<env:avatarmapping agenttype="DumbHunter" objecttype="hunter"/>
			</env:avatarmappings>

			<env:actiontypes>
				<env:actiontype name="move" class="MoveAction" />
				<env:actiontype name="eat" class="EatAction" />
				<env:actiontype name="create_obstacles" class="CreateObstaclesAction" />
			</env:actiontypes>
			
			<env:processtypes>
				<env:processtype name="create" class="CreateFoodProcess">
					<env:property name="rate">5</env:property>
				</env:processtype>
			</env:processtypes>
<!-- 			
			<env:percepttypes>
				<env:percepttype name="new_food">
					<env:parameter name="$prey" objecttype="prey">
						<env:property name="location" />
					</env:parameter>
					<env:parameter name="$food" objecttype="food">
						<env:property name="location" />
					</env:parameter>
				</env:percepttype>
			</env:percepttypes>
 -->
  			
			<env:perceptgeneratortypes>
				<env:perceptgeneratortype name="creaturevisiongen" class="CreatureVisionGenerator"/>
				<env:perceptmapping agenttype="DumbPrey" class="DumbPreyVisionProcessor">
					<!-- Todo: mapping per percept type? - ->
					<env:percepttype name="object_appeared"/>
					<env:percepttype name="object_disappeared"/>
					<env:percepttype name="object_moved"/> -->
				</env:perceptmapping>
				<env:perceptmapping agenttype="DumbHunter" class="DumbHunterVisionProcessor">
					<!-- Todo: mapping per percept type? - ->
					<env:percepttype name="object_appeared"/>
					<env:percepttype name="object_disappeared"/>
					<env:percepttype name="object_moved"/> -->
				</env:perceptmapping>
			</env:perceptgeneratortypes>
			
			<env:views>
				<env:view name="all_view" class="GeneralDataView2D" />
				<!-- <env:view name="prey_view" objecttype="prey">new LocalDataView2D($object, 2)</env:view> -->
				<env:view name="prey_view" class="LocalDataView2D" objecttype="prey">
					<env:property name="object">$object</env:property>
					<env:property name="range">2</env:property>
				</env:view>
				<env:view name="hunter_view" class="LocalDataView2D" objecttype="hunter">
					<env:property name="object">$object</env:property>
					<env:property name="range">2</env:property>
				</env:view>
			</env:views>

			<env:perspectives>
				<env:perspective name="icons" class="Perspective2D">
					<env:drawable objecttype="food" width="1.0" height="1.0">
						<env:texturedrectangle layer="0" size="size" imagepath="jadex/bdi/examples/hunterprey_env/images/food.png" />
					</env:drawable>
					<env:drawable objecttype="obstacle" width="1.0" height="1.0">
						<env:texturedrectangle layer="0" width="0.9" height="0.9" imagepath="jadex/bdi/examples/hunterprey_env/images/obstacle.png" />
					</env:drawable>
					<env:drawable objecttype="prey" width="1.0" height="1.0">
						<env:texturedrectangle layer="1" width="0.9" height="0.9" imagepath="jadex/bdi/examples/hunterprey_env/images/prey.png" />
						<env:rectangle layer="-1" width="5" height="5" color="#ffff007f" />
					</env:drawable>
					<env:drawable objecttype="hunter" width="1.0" height="1.0">
						<env:texturedrectangle layer="2" width="0.9" height="0.9" imagepath="jadex/bdi/examples/hunterprey_env/images/hunter.png" />
						<env:rectangle layer="-1" width="5" height="5" color="#ff00007f" />
					</env:drawable>
					<env:prelayers>
						<env:tiledlayer width="17.5" height="17.5" imagepath="jadex/bdi/examples/hunterprey_env/images/background.png" />
					</env:prelayers>
					<env:postlayers>
						<env:gridlayer width="1.0" height="1.0" color="black" />
					</env:postlayers>
				</env:perspective>
			</env:perspectives>


			<env:perspective name="abstract" class="Perspective2D">
				<env:drawable objecttype="food" width="1.0" height="1.0">
					<env:rectangle layer="0" width="0.3" height="0.3" color="green" />
				</env:drawable>
				<env:drawable objecttype="obstacle" width="1.0" height="1.0">
					<env:triangle layer="0" width="0.9" height="0.9" rotatez="3.14159" color="#996600" />
				</env:drawable>
				<env:drawable objecttype="prey" width="1.0" height="1.0">
					<env:regularpolygon layer="2" width="0.9" height="0.9" vertices="5" color="#CCCCCC" />
				</env:drawable>
				<env:drawable objecttype="hunter" width="1.0" height="1.0">
					<env:regularpolygon layer="2" width="0.9" height="0.9" vertices="8" color="#3366FF" />
				</env:drawable>
				<env:prelayers>
					<!-- <env:tiledlayer width="17.5" height="17.5" color="white" /> -->
					<env:gridlayer width="1.0" height="1.0" color="white" />
				</env:prelayers>
				<env:postlayers>
				</env:postlayers>
			</env:perspective>
			
			<!-- executor -->
			<env:spaceexecutor>
				new RoundBasedExecutor($space, (IClockService)$platform.getService(IClockService.class),
					new CreatureActionComparator($space))
			</env:spaceexecutor>
		</env:envspacetype>
	</spacetypes>

	<agenttypes>
		<agenttype name="MicroPrey" filename="jadex/micro/examples/hunterprey_env/MicroPreyAgent.class"/>
		<agenttype name="DumbPrey" filename="jadex/bdi/examples/hunterprey_env/dumbprey/DumbPrey.agent.xml"/>
		<agenttype name="DumbHunter" filename="jadex/bdi/examples/hunterprey_env/dumbhunter/DumbHunter.agent.xml"/>
	</agenttypes>

	<applications>
		<application name="One Dumb Prey">
 			<agents>
				<agent name="Dummy1" type="DumbPrey"/>
			</agents>
			
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>
				
				<env:processes>
					<env:process type="create">
						<env:property name="rate">5</env:property>
					</env:process>
				</env:processes>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>

		<application name="One Prey / One Hunter">
 			<agents>
				<agent name="Dumbo" type="DumbPrey"/>
				<agent name="Lupo" type="DumbHunter"/>
			</agents>
			
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>
				
				<env:processes>
					<env:process type="create">
						<env:property name="rate">10</env:property>
					</env:process>
				</env:processes>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>

		<application name="Empty">			
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons">
						<env:plugins>
						</env:plugins>
					</env:observer>
				</env:observers>
 			</env:envspace>
 		</application>

		<application name="Multi">
			<agents>
				<agent type="DumbPrey" number="100"/>
			</agents>
				
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>
				
				<env:processes>
					<env:process type="create">
						<env:property name="rate">5</env:property>
					</env:process>
				</env:processes>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>
 		
		<application name="Lupo's Paradise">
			<agents>
				<agent type="DumbPrey" number="100"/>
				<agent name="Lupo" type="DumbHunter"/>
			</agents>
				
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>
				
				<env:processes>
					<env:process type="create">
						<env:property name="rate">5</env:property>
					</env:process>
				</env:processes>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>

		<application name="Battlefield">
			<agents>
				<agent type="DumbPrey" number="200"/>
				<agent type="DumbHunter" number="30"/>
			</agents>
				
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>

				<env:processes>
					<env:process type="create">
						<env:property name="rate">1</env:property>
					</env:process>
				</env:processes>

				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>

		<application name="Five Dumb Preys">
 			<agents>
				<agent name="Duffy" type="DumbPrey"/>
				<agent name="Dumbo" type="DumbPrey"/>
				<agent name="Dimitri" type="DumbPrey"/>
				<agent name="Dork" type="DumbPrey"/>
				<agent name="Django" type="DumbPrey"/>
			</agents>
			
			<env:envspace name="my2dspace" type="2dspace">
				<env:initactions>
					<env:spaceaction type="create_obstacles">
						<env:parameter name="count">125</env:parameter>
					</env:spaceaction>
				</env:initactions>

				<env:processes>
					<env:process type="create">
						<env:property name="rate">10</env:property>
					</env:process>
				</env:processes>
	
				<env:observers>
					<env:observer name="HunterPrey World" view="view_all" perspective="icons" />
				</env:observers>
 			</env:envspace>
 		</application>
	</applications>

</applicationtype>
