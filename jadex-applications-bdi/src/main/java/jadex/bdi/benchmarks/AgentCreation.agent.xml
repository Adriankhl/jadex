<!--
	<H3>Test agent creation performance.</H3>

	Creates a number of peers and prints out the time/memory it takes.
-->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="AgentCreation"
	package="jadex.bdi.benchmarks">

<!--
 	<capabilities>
		<capability name="amscap" file="jadex.bdi.planlib.cms.CMS"/>
	</capabilities> -->

	<beliefs>
		<!-- <belief name="delay" class="int">
			<fact>0</fact>
		</belief> -->
		<belief name="service" class="boolean" exported="true">
			<fact>true</fact>
		</belief>
		<!-- Parallel execution gains only performance advantages if platform executes
			agents also in parallel (standalone -> async platform executor) -->
		<belief name="parallel" class="boolean" exported="true">
			<fact>false</fact>
		</belief>
		<belief name="max" class="Integer" exported="true">
			<fact>new Integer(1000)</fact>
		</belief>
		<belief name="num" class="int" exported="true">
			<fact>new Integer(1)</fact>
		</belief>
		<belief name="counter" class="Counter" exported="true">
			<fact>new Counter()</fact>
		</belief>
		<belief name="starttime" class="Long" exported="true">
			<!-- <fact>new Long($scope.getTime())</fact> -->
			<fact>new Long($scope.getTime())</fact>
		</belief>
		<belief name="startmem" class="Long" exported="true">
			<fact>new Long(Runtime.getRuntime().totalMemory()-Runtime.getRuntime().freeMemory())</fact>
		</belief>
	</beliefs>

	<plans>
		<plan name="start_peer">
			<body class="StartPeerPlan" />
		</plan>
	</plans>
	
	<properties>
		<!-- <property name="logging.level">java.util.logging.Level.WARNING</property> -->
		<property name="debugging">false</property>
	</properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="start_peer"/>
			</plans>
		</configuration>
		<configuration name="def2"/>
		<!--  <configuration name="capability">
			<beliefs>
				<initialbelief ref="service">
					<fact>false</fact>
				</initialbelief>
			</beliefs>
			<plans>
				<initialplan ref="start_peer"/>
			</plans>
		</configuration>-->
	</configurations>
</agent>

