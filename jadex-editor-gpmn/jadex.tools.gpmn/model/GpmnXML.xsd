<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:gpmn="http://jadex.sourceforge.net/gpmn" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://jadex.sourceforge.net/gpmn">
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="ecore.xsd"/>
  <xsd:simpleType name="ConditionLanguage">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="jcl"/>
      <xsd:enumeration value="java"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DirectionType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="in"/>
      <xsd:enumeration value="out"/>
      <xsd:enumeration value="inout"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExcludeType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="never"/>
      <xsd:enumeration value="whenTried"/>
      <xsd:enumeration value="whenFailed"/>
      <xsd:enumeration value="whenSucceeded"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GoalType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="MaintainGoal"/>
      <xsd:enumeration value="AchieveGoal"/>
      <xsd:enumeration value="PerformGoal"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ModeType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="Parallel"/>
      <xsd:enumeration value="Sequential"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="AbstractEdge">
    <xsd:complexContent>
      <xsd:extension base="gpmn:Identifiable">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="parameterMapping" type="gpmn:ParameterMapping"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AbstractEdge" type="gpmn:AbstractEdge"/>
  <xsd:complexType name="AbstractNode">
    <xsd:complexContent>
      <xsd:extension base="gpmn:Identifiable">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="gpmn:Parameter"/>
        </xsd:sequence>
        <xsd:attribute name="description" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="ncname" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="AbstractNode" type="gpmn:AbstractNode"/>
  <xsd:complexType abstract="true" name="AbstractPlan">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractNode">
        <xsd:attribute name="contextcondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>A context condition.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="targetconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="precondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>A precondition.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="java" name="preconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute default="0" name="priority" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The priority can be used for controlling the plan selection process (default priority is 0). Plans with higher priority have precedence for plans with lower priority.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Activatable">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Activatable" type="gpmn:Activatable"/>
  <xsd:complexType name="ActivationEdge">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractEdge">
        <xsd:attribute default="0" name="order" type="xsd:string"/>
        <xsd:attribute name="source" type="xsd:string"/>
        <xsd:attribute name="target" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ActivationEdge" type="gpmn:ActivationEdge"/>
  <xsd:complexType name="BpmnPlan">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractPlan">
        <xsd:attribute name="planref" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="BpmnPlan" type="gpmn:BpmnPlan"/>
  <xsd:complexType name="Context">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="elements" type="gpmn:ContextElement"/>
        </xsd:sequence>
        <xsd:attribute name="gpmnDiagram" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Context" type="gpmn:Context"/>
  <xsd:complexType name="ContextElement">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="set" type="xsd:string"/>
        <xsd:attribute name="type" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ContextElement" type="gpmn:ContextElement"/>
  <xsd:complexType name="Goal">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractNode">
        <xsd:attribute name="unique" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>If a goal is declared unique only one instance of this type is allowed being adopted at any one time. To determine if two goals are equal the type and parameters are used. Parameters that should not be considered can explicitly be excluded. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="creationcondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>A condition that creates a new goal of the given type when triggered. If binding-parameters are used for each possible binding a new goal is created. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="creationconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="contextcondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The context condition is checked during the whole execution time of a goal. If it becomes invalid the goal will become suspended and is not actively pursued until reactivation.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="contextconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="dropcondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>If the dropcondition triggers the goal instance is dropped.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="dropconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="recurcondition" type="xsd:string"/>
        <xsd:attribute name="deliberation" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The goal deliberation setting for the easy deliberation strategy.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetcondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The target condition can be used to specify a desired world state representing goal success.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="targetconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="failurecondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Can be used to explicitly state when a goal cannot be pursued any longer and is failed. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="failureconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute name="maintaincondition" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The mandatory maintain condition represents a world state that should be monitored and re-established whenever it gets violated. </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="jcl" name="maintainconditionLanguage" type="gpmn:ConditionLanguage"/>
        <xsd:attribute default="when_tried" name="exclude" type="gpmn:ExcludeType">
          <xsd:annotation>
            <xsd:documentation>The exclude flag can be specified when a plan will be excluded from the applicable plan list. The default is when_tried, which means that a candidate is excluded independently of its state when executed one time for a goal. Other options are when_succeeded, when_failed and never.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="goalType" type="gpmn:GoalType"/>
        <xsd:attribute default="false" name="posttoall" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>When post-to-all is set to true (default is false), a goal is dispatched to all candidates of the applicable plan list at once. This process will only happen one time regardless of the retry settings. A post-to-all goal has implicit or semantics meaning that if one plan achieves the goal all others will be terminated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="randomselection" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Random selection can be used to choose among applicable plans for a given goal randomly. If used this flag makes the order of plan declaration within the ADF unimportantly, i.e. only random selection is only applied to plans of the same priority and rank (cf. mlreasoning comment). The mechanism is implemented in the jadex.impl.DefaultMetaLevelReasoner.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="true" name="recalculate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>When recalculate is set to false (default is true) the applicable candidates list will be calculated only once for the goal. Otherwise it will be recalculated whenever the goal should be processed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="false" name="recur" type="xsd:string"/>
        <xsd:attribute default="0" name="recurdelay" type="xsd:string"/>
        <xsd:attribute default="true" name="retry" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The retry flag can be used to determine the behavior on plan failures. If retry is turned on (by default it is on) and a plan fails to achieve the considered goal another plan from the applicables plan list will be chosen for execution.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute default="0" name="retrydelay" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>With the retrydelay the delay between the failure of one plan and the execution of the next plan can be specified in milliseconds.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Goal" type="gpmn:Goal"/>
  <xsd:complexType name="GpmnDiagram">
    <xsd:complexContent>
      <xsd:extension base="gpmn:NamedObject">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="imports" nillable="true" type="xsd:string"/>
          <xsd:element maxOccurs="1" minOccurs="1" name="context" type="gpmn:Context"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="goals" type="gpmn:Goal"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="plans" type="gpmn:AbstractPlan"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="subProcesses" type="gpmn:SubProcess"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="activationEdges" type="gpmn:ActivationEdge"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="planEdges" type="gpmn:PlanEdge"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="suppressionEdges" type="gpmn:SuppressionEdge"/>
        </xsd:sequence>
        <xsd:attribute default="" name="package" type="xsd:string"/>
        <xsd:attribute name="author" type="xsd:string"/>
        <xsd:attribute name="revision" type="xsd:string"/>
        <xsd:attribute name="title" type="xsd:string"/>
        <xsd:attribute name="version" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="GpmnDiagram" type="gpmn:GpmnDiagram"/>
  <xsd:complexType name="Identifiable">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:attribute name="id" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Identifiable" type="gpmn:Identifiable"/>
  <xsd:complexType name="ActivationPlan">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractPlan">
        <xsd:attribute default="Parallel" name="mode" type="gpmn:ModeType"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ActivationPlan" type="gpmn:ActivationPlan"/>
  <xsd:complexType name="NamedObject">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:attribute name="description" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="ncname" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NamedObject" type="gpmn:NamedObject"/>
  <xsd:complexType name="Parameter">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute default="inout" name="direction" type="gpmn:DirectionType"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="type" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Parameter" type="gpmn:Parameter"/>
  <xsd:complexType name="ParameterMapping">
    <xsd:complexContent>
      <xsd:extension base="ecore:EModelElement">
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ParameterMapping" type="gpmn:ParameterMapping"/>
  <xsd:complexType name="PlanEdge">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractEdge">
        <xsd:attribute name="source" type="xsd:string"/>
        <xsd:attribute name="target" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PlanEdge" type="gpmn:PlanEdge"/>
  <xsd:complexType name="SubProcess">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractNode">
        <xsd:attribute name="processref" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubProcess" type="gpmn:SubProcess"/>
  <xsd:complexType name="SuppressionEdge">
    <xsd:complexContent>
      <xsd:extension base="gpmn:AbstractEdge">
        <xsd:attribute name="source" type="xsd:string"/>
        <xsd:attribute name="target" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SuppressionEdge" type="gpmn:SuppressionEdge"/>
</xsd:schema>
