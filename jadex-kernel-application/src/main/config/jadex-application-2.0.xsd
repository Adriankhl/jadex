<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Lars (RTL) -->
<xs:schema targetNamespace="http://jadex.sourceforge.net/jadex-application" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://jadex.sourceforge.net/jadex-application" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0">
	<xs:element name="applicationtype">
		<xs:annotation>
			<xs:documentation>An application type specifies the structure and content of a agent application.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="applicationtype"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="applicationtype">
		<xs:annotation>
			<xs:documentation>An application type specifies the structure and content of a agent application.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="startabletype">
				<xs:sequence>
					<xs:element name="imports" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
						Imports allow to add packages (e.g. java.util.*)
						and classes (e.g. java.util.Map) to the class
						lookup mechanism.
					</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="import" type="import" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>
									An import allows to add a package
									(e.g. java.util.*) or a class (e.g.
									java.util.Map) to the class lookup
									mechanism.
								</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="arguments" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
						Container for argument and result
						specifications.
					</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="argument" type="argumenttype" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>
									An argument represents an
									in-parameter for the component.
								</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="result" type="argumenttype" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>
									An argument represents an
									out-parameter for the component.
								</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="spacetypes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
						Space types define concrete substructures of the
						application context, e.g. a 2D environment space
						or an agent-group-role based organization space.
						The elements of space types are defined by
						external XML schemas.
					</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:any minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="componenttypes" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
						Container for the used component types.
					</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="componenttype" type="componenttype" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>
									A component type is defined by a
									logical name and an implementation
									file.
								</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="services" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Service declarations of the application type.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="providedservice" type="providedservicetype" minOccurs="0" maxOccurs="unbounded"/>
								<xs:element name="requiredservice" type="requiredservicetype" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="properties" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Properties for specifiying settings of the application type.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="property" type="propertytype" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="applications" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
						In the applications section, predefined
						application configurations (i.e. application
						instances) can be defined.
					</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="application" type="application" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>
									A predefined application
									configuration.
								</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="name" type="xs:string" use="required"/>
				<xs:attribute name="package" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="componenttype">
		<xs:annotation>
			<xs:documentation>Defines an agent type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="startabletype">
				<xs:attribute name="name" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>The name of the agent type (used for referring to the agent type from other parts of the application descriptor).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="filename" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>The implementation of the agent type. Can be a logical name (resolved using imports) or a concrete file name (e.g. to a bdi agent.xml).</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="application">
		<xs:annotation>
			<xs:documentation>A predefined application configuration.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="startabletype">
				<xs:sequence>
					<xs:element name="arguments" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Container for overridden arguments.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="argument" type="argument" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>An argument an the instance level can be used for overriding the default value declared in the argument type.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="spaces" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The spaces that should available in the application context. These are space instances (or space configurations) usually referring to some defined space type. The details of a space specification are handled in separate XML schemas (e.g. for an AGR space or an evnironment space).</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:any minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="components" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Container for component instances.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="component" type="component" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>A component instance iis used to create a defineable number of components for a declared type.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="name" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="component">
		<xs:annotation>
			<xs:documentation>An agent instance to be created when the application is started.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="startabletype">
				<xs:sequence>
					<xs:element name="arguments" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Argument values to be supplied, when creating the agent.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence minOccurs="0">
								<xs:element name="argument" type="argument" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>A single argument value. Arguments are passed as name / value pairs, where the name is supplied as attribute while the value is given as the text content of the element.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="requiredservices" minOccurs="0">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="binding" type="binding" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="name" type="xs:string" use="optional"/>
				<xs:attribute name="type" type="xs:string" use="required"/>
				<xs:attribute name="configuration" type="xs:string" use="optional"/>
				<xs:attribute name="number" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="argument" mixed="true">
		<xs:annotation>
			<xs:documentation>A single argument value. Arguments are passed as name / value pairs, where the name is supplied as attribute while the value is given as the text content of the element.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The name of the argument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="import" mixed="true">
		<xs:annotation>
			<xs:documentation>An import allows to add a package (e.g. java.util.*) or a class (e.g. java.util.Map) to the class lookup mechanism.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="argumenttype" mixed="true">
		<xs:annotation>
			<xs:documentation>Argument specification for a component.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
		<xs:attribute name="typename" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="propertytype" mixed="true">
		<xs:annotation>
			<xs:documentation>A property type declaration type.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="class" type="xs:string"/>
		<xs:attribute name="language" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="providedservicetype" mixed="true">
		<xs:annotation>
			<xs:documentation>Defines a provided service type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binding" type="binding" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" use="optional"/>
		<xs:attribute name="direct" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:complexType name="requiredservicetype" mixed="true">
		<xs:annotation>
			<xs:documentation>Defines a required service type.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="binding" type="binding" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="class" type="xs:string" use="required"/>
		<xs:attribute name="multiple" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:complexType name="startabletype">
		<xs:annotation>
			<xs:documentation>Abstract super type for startable elements.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="suspend" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="master" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>A master agent ist required for the application, thus, if a master agent is killed, the application will be closed down. Default is false.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="daemon" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="autoshutdown" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:complexType name="binding">
		<xs:annotation>
			<xs:documentation>A binding contains information about service fetching.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="scope" use="optional" default="application">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="local"/>
					<xs:enumeration value="component"/>
					<xs:enumeration value="application"/>
					<xs:enumeration value="platform"/>
					<xs:enumeration value="global"/>
					<xs:enumeration value="upwards"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="componentname" type="xs:string" use="optional"/>
		<xs:attribute name="componenttype" type="xs:string" use="optional"/>
		<xs:attribute name="dynamic" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="create" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="recover" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
</xs:schema>
