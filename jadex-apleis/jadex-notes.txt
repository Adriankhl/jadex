
- the EnvironmentInterfaceStandard should be an interface
- EnvironmentInterfaceStandard -> EnvironmentInterfaceStandardDefaultImpl as
it is the default impl (why shouldn't there be others)
- EnvironmentInterfaceStandard methods should not be made final. This restricts
extensions too much (comments should be sufficient to tell that one should know
what one is doing when certain methods are overridden)
- the action handling of EnvironmentInterfaceStandard is far too strict. It
should definitely not be prescribed that an action is always mapped to
a method invocation of a constructed method name. 
(you should split responsibility of performing the action which could be done
in any way and thereafter notification of listers)

- Bugs: 
- EnvironmentInterfaceStandard 
line 196-198
// no listeners, no notification
	if(environmentListeners.isEmpty())
		return;
		
- EnvironmentInterfaceStandard is currently not thread safe.
This will probably lead to unwanted effects when several
agents are trying to access the environment concurrently.
There also seems not to be any thread decoupling, i.e.
the caller thread always also invokes listeners etc. 