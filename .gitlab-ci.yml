image: gradle:alpine

stages:
  - build
  - test
  - package
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

build:
  stage: build
  script:
    - ./gradlew -Pdist=publishdists clean build -x test -x javadoc
  allow_failure: false

test:
  stage: test
  script:
    - ./gradlew -Pdist=publishdists clean :applications:micro:test :platform:base:test test -x javadoc
  cache:
    paths:
      - binaries/

# Build all kinds of docs/dist files as parallel as possible
checkDists:
  stage: package
  script:
    - ./gradlew -Pdist=publishdists checkDists
    
buildDocsPdf:
  stage: package
  script:
    - ./gradlew -b docs/mkdocs-ng/build.gradle buildDocsZip buildDocsPdf
    
javadocZip:
  stage: package
  script:
    - ./gradlew -Pdist=addonjavadoc javadocZip

# todo: move pass to env
upload:
  stage: deploy
  script: 
    - ./gradlew -Pdist=publishdists publish -x test -P repo_noncommercial=https://oss.sonatype.org/service/local/staging/deploy/maven2 -P repo_commercial= -Prepouser=Lars -Prepopassword=lax

testreport:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - gradle wrapper; ./gradlew testReport
  artifacts:
    paths:
      - testreport
  only:
    - master
  when: always