image: gradle:alpine

stages:
  - build
  - test
  - package
  - deploy

# todo: move code from jenkinsutil.groovy to gradle file and make it a task
before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle; def build_util = load "src/main/buildutils/jenkinsutil.groovy"; def buildname = build_util.fetchNextBuildNameFromGitTag(); currentBuild.displayName = buildname.full; env.BUILD_VERSION_SUFFIX = buildname.suffix

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

# **/build does not work correctly :-(
# https://gitlab.com/gitlab-org/gitlab-foss/issues/17850
build:
  stage: build
  script:
    - ./gradlew -Pdist=publishdists clean build -x test -x javadoc
  allow_failure: false
  artifacts:
    paths:
      - "*/build"
      - "*/*/build"
      - "*/*/*/build"
      - "*/*/*/*/build"
    expire_in: 1 week

test:
  stage: test
  script:
    - ./gradlew -Pdist=publishdists clean :applications:micro:test :platform:base:test test -x javadoc
  artifacts:
    paths:
      - "*/build/test-results/test"
      - "*/*/build/test-results/test"
      - "*/*/*/build/test-results/test"
      - "*/*/*/*/build/test-results/test"
      - "*/build/reports/tests/test"
      - "*/*/build/reports/tests/test"
      - "*/*/*/build/reports/tests/test"
      - "*/*/*/*/build/reports/tests/test"
    expire_in: 1 week

# Build all kinds of docs/dist files as parallel as possible
checkDists:
  stage: package
  script:
    - ./gradlew -Pdist=publishdists checkDists
    
buildDocsPdf:
  stage: package
  script:
    - ./gradlew -b docs/mkdocs-ng/build.gradle buildDocsZip buildDocsPdf
    
javadocZip:
  stage: package
  script:
    - ./gradlew -Pdist=addonjavadoc javadocZip

# todo: move pass to env
upload:
  stage: deploy
  script: 
    - ./gradlew -Pdist=publishdists publish -x test -P repo_noncommercial=https://oss.sonatype.org/service/local/staging/deploy/maven2 -P repo_commercial= -Prepouser=Lars -Prepopassword=lax
