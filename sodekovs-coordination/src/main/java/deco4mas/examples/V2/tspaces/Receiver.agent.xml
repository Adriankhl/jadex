
	<!--
		<H3>Ato be done.</H3> to be done...
	-->

<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="Receiver" package="deco4mas.examples.V2.tspaces">

	<imports>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.*</import>
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.bdi.planlib.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.commons.future.*</import>
		<import>java.util.*</import>
		<import>deco4mas.coordinate.environment.*</import>
		<import>deco4mas.coordinate.*</import>
	</imports>

	<capabilities>		
	<!-- The deco4mas capability. -->
		<!-- <capability name="deco4mas" file="deco4mas.coordinate.Coordinate"/>-->		
	</capabilities>
	
	<beliefs>

		<!-- Environment. -->
		<belief name="env" class="CoordinationSpace">
			<fact>(CoordinationSpace)$scope.getParentAccess().getExtension("mycoordspace").get(new ThreadSuspendable())</fact>
		</belief>

		<!-- Myself. -->
		<belief name="myself" class="ISpaceObject" exported="true">
			<fact>$beliefbase.env.getAvatar($scope.getComponentDescription())</fact>
		</belief>

		<!-- The actual position on the grid world. -->
		<belief name="pos" class="IVector2" evaluationmode="push">
			<fact language="jcl"> $beliefbase.myself.position </fact>
		</belief>

<!--  Stores information that is needed for the decom4mas coordination. -->
		<!-- <belief name="deco4masInfo" class="Map"/> -->
		
		<belief name="storedCoordinations" class="ISpaceObject" />

		<belief name="received_coordination_percepts" class="String" />

		<beliefset name="initValues" class="ISpaceObject" />

		<beliefset name="counter" class="ISpaceObject" />
		
			<belief name="conditionBelief" class="boolean">
			<fact>true</fact>
		</belief>

	</beliefs>


	 <goals>
		<achievegoal name="testGoal">
		</achievegoal>
	</goals> 
	
<plans>
		<!-- Used to initialize the agent for participation in the deco4mas coordination.-->
		<!-- <plan name="initCoordination">
			<parameter name="deco4masInfo" class="HashMap">
				<internaleventmapping
					ref="init_deco4mas_coordination.deco4mas_info"/>
			</parameter>			
			<body class="InitBDIAgentCoordinationPlan"/>
			  <trigger> 
				<internalevent ref="init_deco4mas_coordination"/>								
			</trigger> 
		</plan> -->
		
		<!-- A translation plan, from which an instance is created
			when the agent is born. Reacts on translation request messages.--> 
		<plan name="testPlan">
			<body class="TestPlan"/>
			<trigger> 
				<goal ref="testGoal"/>								
			</trigger>
		</plan>
	</plans>

<events>
	<!-- Used to initialize the agent for participation in the deco4mas coordination.-->
		<!-- <internalevent name="init_deco4mas_coordination">
		<parameter name="deco4mas_info" class="HashMap"/> 
		</internalevent> -->
		
		</events>
		
	<properties>
		<!--
			The environment may throw exceptions when executing property
			listeners and these listeners are not valid any longer. This leads to
			normal plan failure and can therefore be ignored.
		-->
		<property name="logging.level">java.util.logging.Level.WARNING
		</property>
		<property name="debugging">false</property>
	</properties>

	<configurations>
		<configuration name="default">
			<goals>
				<!-- Initial goal for searching for garbage. -->
				<!-- <initialgoal ref="testGoal"/> -->
			</goals>
			<plans>
				<!-- <initialplan ref="listenerPlan" />-->
			</plans>
		</configuration>
	</configurations>

</agent>