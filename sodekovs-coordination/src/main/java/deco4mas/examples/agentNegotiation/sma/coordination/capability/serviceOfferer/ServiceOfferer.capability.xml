<?xml version="1.0" encoding="UTF-8"?>
	<!--
		The ServiceOffererr capability encapsulate requirements to find a
		required services through a coordination medium
	-->
<capability xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	package="deco4mas.examples.agentNegotiation.sma.coordination.capability.serviceOfferer"
	name="ServiceOfferer">

	<imports>
		<import>jadex.base.fipa.*</import>
		<import>jadex.bridge.IComponentIdentifier</import>

		<import>deco4mas.examples.agentNegotiation.decoMAS.dataObjects.*
		</import>
		<import>deco4mas.examples.agentNegotiation.sma.application.*</import>
	</imports>

	<capabilities>
		<!--  capability can be in a trustOwner role	-->
		<capability name="tocap"
			file="deco4mas.examples.agentNegotiation.sma.coordination.capability.serviceOfferer.trustOwner.TrustOwner" />
	</capabilities>

	<beliefs>
		<!--  trustFunction of tocap / if no trust is used = null	-->
		<beliefref name="trustFunction">
			<concrete ref="tocap.trustFunction">
			</concrete>
		</beliefref>
		
		<beliefref name="useTrust">
			<abstract/>
		</beliefref>
		
		<beliefsetref name="negTypes">
			<abstract/>
		</beliefsetref>
	</beliefs>

	<goals>
		<!-- assign agent a Sa for this services-->
		<achievegoal name="searchSa">
			<parameter name="service" class="RequiredService"></parameter>
		</achievegoal>
	</goals>

	<plans>
		<!--  checks if a negotiation is required	-->
		<plan name="NegotiationRequiredCheck">
			<body class="NegotiationRequiredCheckPlan"></body>
			<trigger>
				<internalevent ref="requiredServices"></internalevent>
			</trigger>
		</plan>

		<!-- start one single search request-->
		<plan name="searchSa">
			<body class="SearchSaPlan"></body>
			<trigger>
				<goal ref="searchSa"></goal>
			</trigger>
		</plan>

		<!-- Reply from medium	-->
		<plan name="foundSa">
			<body class="FoundSaPlan">
			</body>
			<trigger>
				<internalevent ref="foundSa"></internalevent>
			</trigger>
		</plan>
	</plans>

	<events>
		<!-- service found event for agent (can check if workflow can execute-->
		<internalevent name="serviceSatisfied">
			<parameter name="id" class="Integer"></parameter>
			<parameter name="sa" class="IComponentIdentifier"></parameter>
		</internalevent>

		<!-- deco event when a new service is required by agent-->
		<internalevent name="requiredServices">
			<parameter name="service" class="RequiredService"></parameter>
		</internalevent>

		<!--  deco event for search and found of sa	-->
		<internalevent name="searchSa">
			<parameter name="request" class="AssignRequest"></parameter>
			<parameter name="task" class="String"></parameter>
		</internalevent>
		<internalevent name="foundSa">
			<parameter name="reply" class="AssignReply"></parameter>
		</internalevent>

		<!--deco eventref-->
		<internaleventref name="trustEvent">
			<concrete ref="tocap.trustEvent" />
		</internaleventref>

		<!--event to inform sa about signEnd-->
		<messageevent name="informMessage" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>
</capability>
