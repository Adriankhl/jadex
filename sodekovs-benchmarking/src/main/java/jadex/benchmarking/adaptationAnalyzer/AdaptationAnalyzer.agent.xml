
<!-- <H3>Benchmarking Manager</H3> Responsible for generating workload /faultload 
	according to specified schedule xml file. -->

<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="AdaptationAnalyzer" package="jadex.benchmarking.adaptationAnalyzer">

	<imports>				
		<import>jadex.base.fipa.*</import>
		<import>java.util.Map</import>
		<import>java.util.HashMap</import>
		<import>java.util.Random</import>
		<import>jadex.commons.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.simulation.helper.*</import>
		<import>jadex.benchmarking.model.*</import>
		<import>jadex.benchmarking.logger.*</import>
		<import>jadex.bridge.service.types.clock.*</import>
	</imports>


	<capabilities>
		<!-- use capability that logs the memory consumption -->
		<capability name="memoryLoggerCap" file="sodekovs.util.logger.MemoryLogger" />
	</capabilities>



	<beliefs>

		<!-- Reference to the memory Loger Capability -->
		<belief name="MemoryLogerID" class="String">
			<fact> String.valueOf(new java.util.Random().nextInt())</fact>
			<assignto ref="memoryLoggerCap.MemoryLoggerID" />
		</belief>

		<!-- Contains all information required to execute the schedule.-->
		<belief name="SuTinfo" class="SuTinfo"/>
		
		<!-- Contains the defintion for the AdaptionAnalysis of this system (SuT).-->
		<belief name="adaptationAnalysis" class="AdaptationAnalysis"/>

	</beliefs>

	<goals>
		<!-- Responsible for managing the start and execution of the monitoring process. It an "IncidentEvent" is observed is starts a separate goal (MonitorSingleAdaptationGoal) to handle this single adaptation. -->
		<achievegoal name="MonitorSystemGoal" retry="false" exclude="never">
			<!-- Contains references of the SuT. -->
			<!-- <parameter name="args" class="SuTinfo" /> -->
		</achievegoal>

		<!-- Contains a sequence of the schedule that has to be executed many times 
			/ repeatedly. -->
		<achievegoal name="MonitorSingleAdaptationGoal" retry="false" exclude="never">
			<!-- Contains references of the SuT. -->
			<!-- <parameter name="args" class="SuTinfo" />			-->
			<!-- Sequence to be executed repeatedly. -->						
			<parameter name="target" class="TargetDefinition" />
			<!-- <parameter name="scheduleLogger" class="ScheduleLogger" /> -->
		</achievegoal>
	</goals>

	<plans>		
		<!-- Start Monitoring of SuT. -->
		<plan name="start_monitor_system">
			<body class="MonitorSystemPlan" />			
			<trigger>
				<goal ref="MonitorSystemGoal" />
			</trigger>
		</plan>

		<!-- Start sequence of the schedule that has to be executed many times 
			/ repeatedly. -->
		<plan name="start_monitor_single_adaptation">
			<body class="MonitorSingleAdaptationPlan" />
			<!-- <parameter name="args" class="SuTinfo">
				<goalmapping ref="MonitorSingleAdaptationGoal.args" />
			</parameter>-->
			<parameter name="target" class="TargetDefinition">
				<goalmapping ref="MonitorSingleAdaptationGoal.target" />
			</parameter>
			<!-- <parameter name="scheduleLogger" class="ScheduleLogger">
				<goalmapping ref="SequenceRepeaterGoal.scheduleLogger" />
			</parameter>-->
			<trigger>
				<goal ref="MonitorSingleAdaptationGoal" />
			</trigger>
		</plan>
	</plans>


	<properties>
		<!-- The environment may throw exceptions when executing property listeners 
			and these listeners are not valid any longer. This leads to normal plan failure 
			and can therefore be ignored. -->
		<property name="logging.level">java.util.logging.Level.WARNING</property>
		<property name="debugging">false</property>
	</properties>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="MonitorSystemGoal" />
			</goals>
		</configuration>
	</configurations>
	
	<services>		
		<requiredservice name="clockservice" class="IClockService">
			<binding scope="platform" />
		</requiredservice>
	</services>

</agent>