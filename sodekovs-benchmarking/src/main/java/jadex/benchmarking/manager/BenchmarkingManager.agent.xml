
<!-- <H3>Benchmarking Manager</H3> Responsible for generating workload /faultload 
	according to specified schedule xml file. -->

<agent xmlns="http://jadex.sourceforge.net/jadex-bdi" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="BenchmarkingManager" package="jadex.benchmarking.manager">

	<imports>
		<import>jadex.base.contextservice.*</import>
		<import>jadex.base.appdescriptor.*</import>
		<import>jadex.base.envsupport.math.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.Map</import>
		<import>java.util.HashMap</import>
		<import>java.util.Random</import>
		<import>jadex.commons.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.simulation.helper.*</import>
		<import>jadex.benchmarking.model.*</import>
		<import>jadex.benchmarking.manager.*</import>
		<import>jadex.benchmarking.services.*</import>
	</imports>


	<capabilities>
		<!-- use capability that logs the memory consumption -->
		<capability name="memoryLoggerCap" file="sodekovs.util.logger.MemoryLogger" />
	</capabilities>



	<beliefs>

		<!-- The parsed schedule xml file. -->
		<belief name="schedule" class="Schedule" />

		<!-- Information about the SuT. -->
		<belief name="suTinfo" class="SuTinfo" />

		<!-- Reference to the XML file that contains the schedule description. 
			This file is parsed on agent start. The reference to the file is passes by 
			the surrounding application file description. -->
		<belief name="scheduleDescriptionFile" class="String">
			<fact>"../sodekovs-benchmarking/src/main/java/jadex/benchmarking/examples/TestBenchmark.xml"
			</fact>
		</belief>

		<!-- Store information about the status of the executed benchmark: preparing_start, 
			running, terminated. -->
		<belief name="benchmarkStatus" class="String">
			<fact>preparing_start</fact>
		</belief>

		<!-- Reference to the memory Loger Capability -->
		<belief name="MemoryLogerID" class="String">
			<fact> String.valueOf(new java.util.Random().nextInt())</fact>
			<assignto ref="memoryLoggerCap.MemoryLoggerID" />
		</belief>

	</beliefs>


	<plans>
		<!-- Init the benchmark. -->
		<plan name="init_benchmark">
			<body class="InitBenchmarkingPlan" />
		</plan>

	</plans>


	<properties>
		<!-- The environment may throw exceptions when executing property listeners 
			and these listeners are not valid any longer. This leads to normal plan failure 
			and can therefore be ignored. -->
		<property name="logging.level">java.util.logging.Level.WARNING</property>
		<property name="debugging">false</property>
		<!-- <property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(), 
			IDF.class, RequiredServiceInfo.SCOPE_PLATFORM)</property> -->
	</properties>

	<configurations>
		<configuration name="default">
			<plans>
				<initialplan ref="init_benchmark" />
			</plans>
		</configuration>
	</configurations>

	<services>
		<providedservice class="IBenchmarkingExecutionService">new
			BenchmarkingExecutionService($scope)</providedservice>
	</services>

</agent>