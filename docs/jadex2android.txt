Porting Jadex to Android
=================================

For a minimal version of Jadex, following packages are required:

* jadex-bridge
* jadex-commons
* jadex-javaparser
* jadex-kernel-application
* jadex-kernel-micro
* jadex-platform-base
* jadex-platform-standalone
* jadex-xml

Up to now, there is no Jadex-Android Library, so the sources need to be copied to 
your project and altered to be able to run on Android (min. API-8, i.e. Android 2.2 is required).
If you need compatibility to Android 1.6 (API-4), you'll find additional information at the end
of the document.

You also need the Streaming API for XML (StAX). 
* Go to http://dist.codehaus.org/stax/distributions/ and download 'stax-src-1.2.0.zip'.
* Unpack the archive into your source directory. 
* Open the class 'javax.xml.XMLConstants' and add following constant:
  'public static final String NULL_NS_URI = "";'

=== jadex-bridge ===

* IComponentFactory: 
  remove the interface method 'public Icon getComponentTypeIcon(String type);'
  and the corresponding Icon-import
  
=== jadex-bridge ===

* Exclude:
  gui
  jtable
  BrowserLauncher2
  FixedJComboBox
  SGUI
  TreeExpansionHandler
  
* SUtil:
  remove the methods 'public static String fontToHTML(Font font)' and 
  'public static String colorToHTML(Color color)' and the corresponding errorneous imports.
  
=== jadex-javaparser ===

* In order to get rid off compiling errors, you need to include the javacc.jar in your build-path

=== jadex-kernel-applications ===

* Exclude: space
* ApplicationComponentFactory:
  remove the 'icon' declaration and the method 'public Icon getComponentTypeIcon(String type)'
  as well as errorneous imports
  
=== jadex-kernel-micro ===

* MicroAgentFactory:
  remove the 'icon' declaration and the method 'public Icon getComponentTypeIcon(String type)'
  as well as errorneous imports
  
=== jadex-platform-base ===

* Exclude:
  gui
  PlatformApplet
  contentcodecs/JavaXMLContentCodec
  service/awareness/AwarenessAgentPanel
  
* SComponentFactory:
  remove the body of 'public static IFuture getFileTypeIcon(IServiceProvider provider, final String type)'
  and insert 'return new Future(null);'
  
=== jadex-platform-standalone === 

* Exclude:
  transport/codecs/XMLCodec
 
* MessageService:
  remove 'new jadex.base.contentcodecs.JavaXMLContentCodec(),'
  
* CodecFactory
  remove 'addCodec(XMLCodec.class);'
  
* Platform.application.xml
  remove 'new NIOTCPTransport($component.getServiceProvider(), $args.niotcpport)' and instead
  add (or uncomment) 'new TCPTransport($component.getServiceProvider(), $args.tcpport)'
  remove 'new Set[]
				{
					MEnvSpaceType.getXMLMapping(),
					MAGRSpaceType.getXMLMapping()
				},' as parameter for ApplicationComponentFactory
				
=== jadex-xml ===

* Exclude:
  benchmark
  bean/BeanInfoIntrospector
  
* bean/JavaReader
  remove following code-block:
  // java.util.Color
  IStringObjectConverter coconv = new IStringObjectConverter()
  {
    public Object convertString(String val, IContext context)
    {
      return Color.decode(val);
    }
  };
  TypeInfo ti_color = new TypeInfo(new XMLInfo(new QName[]{new QName(SXML.PROTOCOL_TYPEINFO+"java.awt", "Color")}), 
	null, new MappingInfo(null, null, new AttributeInfo(new AccessInfo((String)null, AccessInfo.THIS), new AttributeConverter(coconv, null))));
  typeinfos.add(ti_color);
  
  ... and errorneous imports.
  

=== Final step ===

In the first step, you added the StAX sources to your project.
Due to security restrictions it is not easily possible to have package-names 
starting with 'java' or 'javax' (e.g. javax.xml.XMLConstants). 
Therefore, you need to rename the root-package to - say 'javx' or 'jadexx'.
Make sure, this refactoring is applied to all sources in your project so that
all the Jadex classes making use of javax.xml get refactored as well.

=== Android 1.6 (API-4) compatibility ===

Android API-4 lacks support for javax.xml.transform.* which has only recently been introduced with API-8.
The JDK 1.6 sources for javax.xml.transform compile with slight modifications under Android API-4.
Unfortunately, during runtime a required class (MXParserFactory) could not be found in the classpath
although it is definitely present. Hints are welcome.