Changes from Jadex 0.96 to Jadex V2 beta1

This is a short (probably incomplete) list of
the major changes regarding the programming
of Jadex V2 BDI agents. Please look at the
example sources to learn more about the details.
Full documentation will be available with the
final V2 release. 

New Features:
	- V2 supports direct referencing of elements from inner capabilities
	  (e.g. "dfcap.df_search"), i.e. it is not necessary to declare local 
	  reference elements for exported elements of direct subcapabilities. 
	  Old explicit references are still supported and necessary, when imported
	  elements should be further exported.
	- Instead of using AMS/DF capabilities, the services can be accessed
	  directly using getScope().getPlatform().getService(IAMS.class / IDF.class).
	  All platform functionalities are accessible in this way.
	  Nevertheless, using the capabilities is still equally supported and
	  facilitates the BDI agent programming.
	- Calls to jadex.bdi.runtime.* objects are now automatically correctly
	  synchronized depending on the caller thread (plan thread, swing thread, etc.),
	  i.e. you don't need to care with what thread you call from within the agent.
	  For access from other threads to agent internals still the external access
	  interface has to be used.

XML Changes:
	- Conditions and dynamic beliefs have to be written in a CLIPS-like
	  rule language (also used e.g. in JESS). Have a look at the Jadex examples.
	  Documentation for CLIPS can be found at (focus on LHS Syntax in sect. 5.4):
	  http://clipsrules.sourceforge.net/documentation/v624/bpg.htm
	- Along with the condition syntax, also the evaluation mode names have changed
	  (from 'dynamic' to either 'push' or 'pull') and are no longer assigned to
	  facts but to beliefs instead. The push mode requires a CLIPS condition and
	  actively updates a fact when changes in the condition are detected, while 
	  the pull mode takes a Java expression as before and is evaluated on access.
	  See examples for details.
	- <beliefchange> and <beliefsetchange> triggers have been removed.
	  Use <factadded/removed/changed> instead. 
	- The plan body is no longer provided as Java expression ('new XYZPlan()'),
	  but as class attribute ('class="XYZPlan"'). Arguments should be passed
	  via parameters to the plan.
	- The planlib has been restructured and capbilities have been moved (ams/df)
	  and separated (protocols).

Java Changes:
	- The classes from jadex.runtime.* have moved to jadex.bdi.runtime.*
	- IMessageEvent.get/setContent() methods have been removed.
	  Use getParameter(SFipa.CONTENT).get/setValue() instead.
	- IMessageEvent.createReply() has been removed.
	  Use getEventbase.createReply(messageevent) instead.
	- Due to the rule based implementation there are some requirements for Java objects
	  used as belief facts/parameter values etc.
	    - Objects must not change their hashCode() during lifetime.
	    - Objects, of which multiple equal instances exist (when the equals()
	      method is overridden) must not differ in their attribute values
	      and must not provide add/removePropertyChangeListener methods.
	      As a rule of thumb: override equals only for immutable value types.
	- Agent identifiers are now represente by jadex.bridge.IAgentIdentifier
	- New agent identifiers have to be created using the AMS service.
	- Package jadex.util has been renamed to jadex.common.
	- The SFipa class has been moved to package jadex.adapter.base.fipa.