/*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
  This code is generated by JAC version 5.6 by
  Agent Oriented Software. http://www.agent-software.com.au

    DO NOT ALTER THIS CODE AND DO NOT REMOVE THIS COMMENT
 *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/
import aos.jack.jak.agent.Agent;
import aos.jack.jak.event.PlanChoice;
import aos.jack.Kernel;
import java.lang.Object;

public class Sokrates extends aos.jack.jak.agent.Agent implements ISokrates {
    protected int triescnt;
    public Board board;
    private NextMove nm;
    public Sokrates(java.lang.String name)
    {
        super(name);
        boolean __b = getAgentType() == Sokrates.class;
        if (__b) {
            __init1();
            __init2();
        }
        if (__b) 
            startAgent();
    }
    
    boolean begin()
    {
        return postEventAndWait(nm.next(0));
    }
    
    public int getTriesCnt()
    {
        return ++triescnt;
    }
    
    public static void main(java.lang.String[] args)
    {
        args = aos.jack.Kernel.init(args);
        new Sokrates("viking").begin();
        int cnt = 1;
        long start = java.lang.System.currentTimeMillis();
        for (int i = 0; i < cnt; i++ )
            new Sokrates("viking").begin();
        long end = java.lang.System.currentTimeMillis();
        java.lang.System.out.println("Needed: " + (end - start) / cnt);
        java.lang.System.exit(0);
    }
    
    public java.lang.Class getAgentType()
    {
        return Sokrates.class;
    }
    
    public void __init1()
    {
        super.__init1();
        setNamedCreator("board","Board",new aos.jack.jak.agent.DataCreator(true){
            public java.lang.Object create()
            {
                return __named_data_board();
            }
            
        },true);
    }
    
    public void __init2()
    {
        super.__init2();
        getNamedObject("board","Board");
        nm = (NextMove) findEvent("NextMove");
    }
    
    synchronized private void __init_desc()
    {
        addNamedObject("board","Board",aos.jack.jak.agent.Agent.WRITEABLE);
        addEvent("NextMove",aos.jack.jak.agent.Agent.HANDLED_EVENT);
        addEvent("aos.jack.jak.event.PlanChoice",aos.jack.jak.agent.Agent.HANDLED_EVENT);
        addEvent("NextMove",aos.jack.jak.agent.Agent.POSTED_EVENT);
        addPlan("Move",0);
        addPlan("ChooseMove",0);
    }
    
    public void init_desc()
    {
        newAgentDesc("Sokrates");
        super.init_desc();
        __init_desc();
    }
    
    synchronized public void __bindNames()
    {
        super.__bindNames();
    }
    
    private Board __named_data_board()
    {
        if (board != null) 
            return board;
        board = new Board();
        setNamedObject("board","Board",board);
        return board;
    }
    
}
