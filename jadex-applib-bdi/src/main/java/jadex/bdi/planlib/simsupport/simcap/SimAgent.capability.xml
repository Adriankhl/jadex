<!--
	Capability for agent management system (AMS) functionality.
	Defines some services that should be available on any platform
	(create/search/destroy agents).
-->
<capability xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-2.0.xsd"
	package="jadex.bdi.planlib.simsupport.simcap"
	name="SimAgent">

	<imports>
		<import>java.util.List</import>
		<import>jadex.bridge.IAgentIdentifier</import>
		<import>jadex.bdi.planlib.simsupport.environment.*</import>
		<import>jadex.bdi.planlib.simsupport.common.math.*</import>
		<import>jadex.bdi.planlib.simsupport.common.graphics.drawable.IDrawable</import>
		<import>jadex.bdi.planlib.simsupport.environment.process.IEnvironmentProcess</import>
	</imports>

	<capabilities>
	</capabilities>

	<beliefs>
		<!-- Internal Beliefs -->
		
		<!-- Local Simulation Engine if available -->
		<belief name="local_simulation_engine" class="ISimulationEngine">
			<fact>null</fact>
		</belief>
		
		<!-- Remote Simulation Engine if available -->
		<belief name="remote_simulation_engine" class="IAgentIdentifier">
			<fact>null</fact>
		</belief>
		
		<!-- State of the location of the environment -->
		<belief name="connected" class="Boolean">
			<fact>new Boolean(false)</fact>
		</belief>
	</beliefs>
	
	<goals>
		<!-- Creates a new simulation object. -->
		<achievegoal name="sim_create_object" exported="true">
			<!-- Type of the object. -->
			<parameter name="type" class="String"/>
			<!-- Place new object at this position -->
			<parameter name="position" class="IVector2"/>
			<!-- Give the new object this velocity -->
			<parameter name="velocity" class="IVector2"/>
			<!-- Use these drawables to represent the object -->
			<parameter name="drawable" class="IDrawable"/>
			<!-- Whether to listen to object events -->
			<parameter name="listen" class="Boolean"/>
			<!-- ID of the object -->
			<parameter name="object_id" class="Integer" direction="out"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Destroys a simulation object. -->
		<achievegoal name="sim_destroy_object" exported="true">
			<!-- ID of the object -->
			<parameter name="object_id" class="Integer" direction="out"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Retrieves the current position of the object. -->
		<achievegoal name="sim_get_position" exported="true">
			<!-- ID of the object -->
			<parameter name="object_id" class="Integer"/>
			<!-- The position of the object. -->
			<parameter name="position" class="IVector2" direction="out"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Sets a new velocity for the object. -->
		<achievegoal name="sim_set_velocity" exported="true">
			<!-- ID of the object -->
			<parameter name="object_id" class="Integer"/>
			<!-- The new velocity. -->
			<parameter name="velocity" class="IVector2"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Sets a new destination for the object.
			 The object will attempt to reach the destination directly. -->
		<achievegoal name="sim_set_destination" exported="true">
			<!-- ID of the object -->
			<parameter name="object_id" class="Integer"/>
			<!-- The new destination. -->
			<parameter name="destination" class="IVector2"/>
			<!-- The speed the object will have. -->
			<parameter name="speed" class="IVector1"/>
			<!-- The tolerated distance from the destination that is still
				 considered to be within the destination -->
			<parameter name="tolerance" class="IVector1"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Retrieves a random position in the simulated area
		     with a minimum distance from the edge. -->
		<achievegoal name="sim_get_random_position" exported="true">
			<!-- The distance from the edge. -->
			<parameter name="distance" class="IVector2"/>
			<!-- Random position in the simulated area. -->
			<parameter name="position" class="IVector2" direction="out"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Adds a new environment process. -->
		<achievegoal name="sim_add_environment_process" exported="true">
			<!-- The new environment process. -->
			<parameter name="process" class="IEnvironmentProcess"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Removes an environment process. -->
		<achievegoal name="sim_remove_environment_process" exported="true">
			<!-- The environment process. -->
			<parameter name="process" class="IEnvironmentProcess"/>
			<contextcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</contextcondition>
		</achievegoal>
		
		<!-- Attempts to connect to environment -->
		<achievegoal name="sim_connect_environment" retry="true" retrydelay="100" exclude="when_succeeded" exported="true">
			<!-- Name of the environment this object belongs to. -->
			<parameter name="environment_name" class="String"/>
			<targetcondition>
				?rbelief = (belief (element_has_model ?mbelief) (belief_has_fact true))
				?mbelief = (mbelief (element_has_name "connected"))
			</targetcondition>
		</achievegoal>
		
	</goals>

	<plans>
		<!-- Local plans -->
		
		<plan name="local_create_object_plan">
			<parameter name="type" class="String">
				<goalmapping ref="sim_create_object.type"/>
			</parameter>
			<parameter name="position" class="IVector2">
 				<goalmapping ref="sim_create_object.position"/>
			</parameter>
			<parameter name="velocity" class="IVector2">
 				<goalmapping ref="sim_create_object.velocity"/>
			</parameter>
			<parameter name="drawable" class="IDrawable">
 				<goalmapping ref="sim_create_object.drawable"/>
			</parameter>
			<parameter name="listen" class="Boolean">
				<goalmapping ref="sim_create_object.listen"/>
			</parameter>
			<parameter name="object_id" class="Integer" direction="out">
 				<goalmapping ref="sim_create_object.object_id"/>
			</parameter>
			<body class="LocalCreateObjectPlan" />
			<trigger>
				<goal ref="sim_create_object"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_destroy_object_plan">
			<parameter name="object_id" class="Integer">
 				<goalmapping ref="sim_destroy_object.object_id"/>
			</parameter>
			<body class="LocalDestroyObjectPlan" />
			<trigger>
				<goal ref="sim_destroy_object"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_get_position_plan">
			<parameter name="object_id" class="Integer">
 				<goalmapping ref="sim_get_position.object_id"/>
			</parameter>
			<parameter name="position" class="IVector2">
 				<goalmapping ref="sim_get_position.position"/>
			</parameter>
			<body class="LocalGetPositionPlan" />
			<trigger>
				<goal ref="sim_get_position"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_set_velocity_plan">
			<parameter name="object_id" class="Integer">
 				<goalmapping ref="sim_set_velocity.object_id"/>
			</parameter>
			<parameter name="velocity" class="IVector2">
 				<goalmapping ref="sim_set_velocity.velocity"/>
			</parameter>
			<body class="LocalSetVelocityPlan" />
			<trigger>
				<goal ref="sim_set_velocity"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_set_destination_plan">
			<parameter name="object_id" class="Integer">
 				<goalmapping ref="sim_set_destination.object_id"/>
			</parameter>
			<parameter name="destination" class="IVector2">
 				<goalmapping ref="sim_set_destination.destination"/>
			</parameter>
			<parameter name="speed" class="IVector1">
 				<goalmapping ref="sim_set_destination.speed"/>
			</parameter>
			<parameter name="tolerance" class="IVector1">
 				<goalmapping ref="sim_set_destination.tolerance"/>
			</parameter>
			<body class="LocalSetDestinationPlan" />
			<trigger>
				<goal ref="sim_set_destination"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_get_random_position_plan">
			<parameter name="distance" class="IVector2">
 				<goalmapping ref="sim_get_random_position.distance"/>
			</parameter>
			<parameter name="position" class="IVector2" direction="out">
 				<goalmapping ref="sim_get_random_position.position"/>
			</parameter>
			<body class="LocalGetRandomPositionPlan" />
			<trigger>
				<goal ref="sim_get_random_position"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_add_environment_process_plan">
			<parameter name="process" class="IEnvironmentProcess">
 				<goalmapping ref="sim_add_environment_process.process"/>
			</parameter>
			<body class="LocalAddEnvironmentProcessPlan" />
			<trigger>
				<goal ref="sim_add_environment_process"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<plan name="local_remove_environment_process_plan">
			<parameter name="process" class="IEnvironmentProcess">
 				<goalmapping ref="sim_remove_environment_process.process"/>
			</parameter>
			<body class="LocalRemoveEnvironmentProcessPlan" />
			<trigger>
				<goal ref="sim_remove_environment_process"/>
			</trigger>
			<precondition>$beliefbase.local_simulation_engine!=null</precondition>
		</plan>
		
		<!-- Remote plans -->
		
		<!-- Special plans -->
		<plan name="connect_environment_plan">
			<parameter name="environment_name" class="String">
 				<goalmapping ref="sim_connect_environment.environment_name"/>
			</parameter>
			<body class="ConnectEnvironmentPlan"/>
			<trigger>
				<goal ref="sim_connect_environment"/>
			</trigger>
		</plan>
	</plans>
	
	<events>
    	<!-- Destination reached event. -->
    	<internalevent name="simobj_dest_reached"/>
	</events>
	
	<properties>
	</properties>

</capability>
