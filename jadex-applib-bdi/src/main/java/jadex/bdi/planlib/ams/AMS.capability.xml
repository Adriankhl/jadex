<!--
	Capability for agent management system (AMS) functionality.
	Defines some services that should be available on any platform
	(create/search/destroy agents).
-->
<capability xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex 
	                    http://jadex.sourceforge.net/jadex-2.0.xsd"
	package="jadex.bdi.planlib.ams"
	name="AMS">

	<imports>
		<import>jadex.adapter.base.fipa.*</import>
		<import>jadex.bridge.*</import>
		<import>java.util.*</import>
	</imports>

	<capabilities>
 		<capability name="procap" file="jadex.bdi.planlib.protocols.request.Request"/>
	</capabilities>

	<beliefs>
		<!-- The ams service (stored to receive bean property changes). -->
		<belief name="ams" class="IAMS">
			<fact>$scope.getAgentAdapter().getPlatform().getService(IAMS.class, SFipa.AMS_SERVICE)</fact>
		</belief>
		<!-- The agents on this platform. todo: remove, offer only subscribe -->
		<beliefset name="agents" class="IAMSAgentDescription" exported="true"/>
		<!-- Timeout for messages. - ->
		<beliefref name="timeout" exported="true">
			<concrete ref="procap.timeout"/>
		</beliefref>-->
	</beliefs>
	
	<goals>
		<!-- Create a new agent on the platform. -->
		<achievegoal name="ams_create_agent" exported="true">
			<!-- The agent type (name/path of agent model). -->
			<parameter name="type" class="String"/>
			<!-- The name of the instance to create. -->
			<parameter name="name" class="String" optional="true"/>
			<!-- The initial agent configuration to use. -->
			<parameter name="configuration" class="String" optional="true"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/> 
			<!-- The identifier of the created agent. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier" direction="out"/>
			<!-- The arguments for the new agent. -->
			<!--<parameterset name="arguments" class="Object" optional="true"/>-->
			<parameter name="arguments" class="Map" optional="true"/>
			<!-- Class loader to be used (only supported for local requests). -->
			<parameter name="classloader" class="ClassLoader" optional="true"/>
			<!-- Flag indicating if the agent should be started after creation. -->
			<parameter name="start" class="boolean">
				<value>true</value>
			</parameter>
		</achievegoal>

		<!-- Start the given agent (only possible when it has previously been created with start=false). -->
		<achievegoal name="ams_start_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/> 
		</achievegoal>

		<!-- Destroy the given agent. -->
		<achievegoal name="ams_destroy_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/> 
		</achievegoal>
		
		<!-- Suspend the given agent. -->
		<achievegoal name="ams_suspend_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/>
			<!-- The possibly changed ams agent description. -->
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out"/>
		</achievegoal>
		
		<!-- Resume the given agent. -->
		<achievegoal name="ams_resume_agent" exported="true">
			<!-- The agent to destroy. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/> 
				<!-- The possibly changed ams agent description. -->
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out"/>
		</achievegoal>

		<!-- Search for agents on the platform. -->
		<achievegoal name="ams_search_agents" exported="true">
			<!-- The template description to search for. -->
			<parameter name="description" class="IAMSAgentDescription"/>
			<!-- The search constraints. -->
			<parameter name="constraints" class="ISearchConstraints" optional="true"/>
			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/> 
			<!-- The search results. -->
			<parameterset name="result" class="IAMSAgentDescription" direction="out"/>
		</achievegoal>
		
		<!-- Shutdown the platform. -->
		<achievegoal name="ams_shutdown_platform" exported="true">
 			<!-- The AMS agent identifier (only needed for remote requests). -->
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier" optional="true"/>
		</achievegoal>
		
		<!-- Get the external access of an agent. -->
		<querygoal name="ams_get_externalaccess" exported="true">
			<!-- The agent identifier. -->
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier"/>
			<!-- The external access. -->
			<parameter name="result" class="Object" direction="out"/> 
		</querygoal>
 
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>
	</goals>

	<plans>
		<plan name="local_create_agent_plan">
			<parameter name="type" class="String">
 				<goalmapping ref="ams_create_agent.type"/>
			</parameter>
			<parameter name="name" class="String">
 				<goalmapping ref="ams_create_agent.name"/>
			</parameter>
			<parameter name="configuration" class="String">
 				<goalmapping ref="ams_create_agent.configuration"/>
			</parameter>
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier" direction="out">
 				<goalmapping ref="ams_create_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_create_agent.ams"/>
			</parameter>
			<parameter name="arguments" class="Map">
 				<goalmapping ref="ams_create_agent.arguments"/>
			</parameter>
			<parameter name="classloader" class="ClassLoader">
 				<goalmapping ref="ams_create_agent.classloader"/>
			</parameter>
			<parameter name="start" class="boolean">
 				<goalmapping ref="ams_create_agent.start"/>
			</parameter>
			<body class="AMSLocalCreateAgentPlan" />
			<trigger>
				<goal ref="ams_create_agent"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>

		<plan name="local_start_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_start_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_start_agent.ams"/>
			</parameter>
			<body class="AMSLocalStartAgentPlan" />
			<trigger>
				<goal ref="ams_start_agent"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>
		
		<plan name="local_destroy_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_destroy_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_destroy_agent.ams"/>
			</parameter>
			<body class="AMSLocalDestroyAgentPlan" />
			<trigger>
				<goal ref="ams_destroy_agent"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>
		
		<plan name="local_suspend_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_suspend_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_suspend_agent.ams"/>
			</parameter>
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out">
				<goalmapping ref="ams_suspend_agent.agentdescription"/>
			</parameter>
			<body class="AMSLocalSuspendAgentPlan" />
			<trigger>
				<goal ref="ams_suspend_agent"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>
		
		<plan name="local_resume_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_resume_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_resume_agent.ams"/>
			</parameter>
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out">
				<goalmapping ref="ams_resume_agent.agentdescription"/>
			</parameter>
			<body class="AMSLocalResumeAgentPlan" />
			<trigger>
				<goal ref="ams_resume_agent"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>

		<plan name="local_search_agents_plan">
			<parameter name="description" class="IAMSAgentDescription">
 				<goalmapping ref="ams_search_agents.description"/>
			</parameter>
			<parameter name="constraints" class="ISearchConstraints">
 				<goalmapping ref="ams_search_agents.constraints"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_search_agents.ams"/>
			</parameter>
			<parameterset name="result" class="IAMSAgentDescription" direction="out">
 				<goalmapping ref="ams_search_agents.result"/>
			</parameterset>
			<body class="AMSLocalSearchAgentsPlan" />
			<trigger>
				<goal ref="ams_search_agents"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>

		<plan name="local_shutdown_platform_plan">
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_shutdown_platform.ams"/>
			</parameter>
			<body class="AMSLocalShutdownPlatformPlan" />
			<trigger>
				<goal ref="ams_shutdown_platform"/>
			</trigger>
			<precondition>$goal.ams==null</precondition>
		</plan>
		
		<!-- todo: remove, completely inefficient -->
		<plan name="local_update_agents_plan">
			<body class="AMSLocalUpdateAgentsPlan" />
			<!-- <trigger>
				<beliefchange ref="ams"/>
			</trigger>-->
		</plan>
		
		<plan name="local_get_externalaccess_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_get_externalaccess.agentidentifier"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
 				<goalmapping ref="ams_get_externalaccess.result"/>
			</parameter>
			<body class="AMSLocalGetExternalAccessPlan" />
			<trigger>
				<goal ref="ams_get_externalaccess"/>
			</trigger>
		</plan>
		
		<!-- Remote plans -->

		<plan name="remote_create_agent_plan">
			<parameter name="type" class="String">
 				<goalmapping ref="ams_create_agent.type"/>
			</parameter>
			<parameter name="name" class="String">
 				<goalmapping ref="ams_create_agent.name"/>
			</parameter>
			<parameter name="configuration" class="String">
 				<goalmapping ref="ams_create_agent.configuration"/>
			</parameter>
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier" direction="out">
 				<goalmapping ref="ams_create_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_create_agent.ams"/>
			</parameter>
			<parameter name="arguments" class="Map">
 				<goalmapping ref="ams_create_agent.arguments"/>
			</parameter>
			<parameter name="start" class="boolean">
 				<goalmapping ref="ams_create_agent.start"/>
			</parameter>
			<body class="AMSRemoteCreateAgentPlan" />
			<trigger>
				<goal ref="ams_create_agent"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>

		<plan name="remote_start_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_start_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_start_agent.ams"/>
			</parameter>
			<body class="AMSRemoteStartAgentPlan" />
			<trigger>
				<goal ref="ams_start_agent"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>
		
		<plan name="remote_destroy_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_destroy_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_destroy_agent.ams"/>
			</parameter>
			<body class="AMSRemoteDestroyAgentPlan" />
			<trigger>
				<goal ref="ams_destroy_agent"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>
		
		<plan name="remote_suspend_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_suspend_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_suspend_agent.ams"/>
			</parameter>
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out">
				<goalmapping ref="ams_suspend_agent.agentdescription"/>
			</parameter>
			<body class="AMSRemoteSuspendAgentPlan" />
			<trigger>
				<goal ref="ams_suspend_agent"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>
		
		<plan name="remote_resume_agent_plan">
			<parameter name="agentidentifier" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_resume_agent.agentidentifier"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_resume_agent.ams"/>
			</parameter>
			<parameter name="agentdescription" class="IAMSAgentDescription" direction="out">
				<goalmapping ref="ams_resume_agent.agentdescription"/>
			</parameter>
			<body class="AMSRemoteResumeAgentPlan" />
			<trigger>
				<goal ref="ams_resume_agent"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>

		<plan name="remote_search_agents_plan">
			<parameter name="description" class="IAMSAgentDescription">
 				<goalmapping ref="ams_search_agents.description"/>
			</parameter>
			<parameter name="constraints" class="ISearchConstraints">
 				<goalmapping ref="ams_search_agents.constraints"/>
			</parameter>
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_search_agents.ams"/>
			</parameter>
			<parameterset name="result" class="IAMSAgentDescription" direction="out">
 				<goalmapping ref="ams_search_agents.result"/>
			</parameterset>
			<body class="AMSRemoteSearchAgentsPlan" />
			<trigger>
				<goal ref="ams_search_agents"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>

		<plan name="remote_shutdown_platform_plan">
			<parameter name="ams" class="jadex.bridge.IAgentIdentifier">
 				<goalmapping ref="ams_shutdown_platform.ams"/>
			</parameter>
			<body class="AMSRemoteShutdownPlatformPlan" />
			<trigger>
				<goal ref="ams_shutdown_platform"/>
			</trigger>
			<precondition>$goal.ams!=null</precondition>
		</plan>
	</plans>
	<!-- 
	<expressions>
		<condition name="agent_removed">
			!$beliefbase.ams.containsAgent(aid)
			<parameter name="aid" class="jadex.bridge.IAgentIdentifier"/>
		</condition>
	</expressions> -->

	<properties>
		<!-- <property name="logging.level.exceptions">java.util.logging.Level.INFO</property>-->
	</properties>

 	<configurations>
		<configuration name="default"/>
		<configuration name="agentlist">
			<plans>
				<initialplan ref="local_update_agents_plan"/>
			</plans>
		</configuration>
	</configurations>

</capability>
