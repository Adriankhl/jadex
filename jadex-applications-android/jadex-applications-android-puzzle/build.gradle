dependencies
{
    compile project(':jadex-android-platformclient')

    debugProvided project(':jadex-android-commons')
    debugProvided project(':jadex-kernel-bpmn')
//    debugProvided project(':jadex-kernel-bdi')
    debugProvided project(':jadex-kernel-bdiv3-android')
    debugProvided project(':jadex-kernel-bdiv3')
    debugProvided project(':jadex-runtimetools-android')
    debugProvided project(':jadex-platform-extension-webservice-android')

    releaseProvided project(':jadex-android-commons')
    releaseProvided project(':jadex-kernel-bpmn')
//    releaseProvided project(':jadex-kernel-bdi')
    releaseProvided project(':jadex-kernel-bdiv3-android')
    releaseProvided project(':jadex-kernel-bdiv3')
    releaseProvided project(':jadex-runtimetools-android')
    releaseProvided project(':jadex-platform-extension-webservice-android')
}

buildscript {
    repositories {
        mavenLocal() // needed because else gradle looks in android-sdk/m2repository :(
        mavenCentral()
    }
    dependencies {

        // this would be easy - but does not work:
//        classpath project(':jadex-gradle-plugin')

        // this works only if the plugin exists in maven repo
//        classpath group: 'net.sourceforge.jadex', name: 'jadex-gradle-plugin',
//                version: '1.0-SNAPSHOT'

        // for compilation together with the plugin, we need to directly point to the classes:
        classpath files(project(':jadex-gradle-plugin').sourceSets.main.output)
        // add possible dependencies of the plugin to buildpath
        classpath files(project(':jadex-gradle-plugin').sourceSets.main.runtimeClasspath)
    }
}

apply plugin: jadex.gradle.BDIPlugin
//apply plugin: 'jadex-bdi'

