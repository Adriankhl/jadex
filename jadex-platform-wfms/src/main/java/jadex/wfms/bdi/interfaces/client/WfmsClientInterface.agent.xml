<!--
	<H3>WFMS Client Application Interface Agent.</H3>
-->
<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	   name="WfmsClientInterface"
	   package="jadex.wfms.bdi.interfaces.client">

	<imports>
		<import>jadex.adapter.base.fipa.SFipa</import>
		<import>java.util.*</import>
		<import>jadex.adapter.base.fipa.*</import>
		<import>jadex.wfms.bdi.*</import>
		<import>jadex.wfms.bdi.ontology.*</import>
	</imports>

	<capabilities>
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF"/>
		<capability name="reqcap" file="jadex.bdi.planlib.protocols.request.Request"/>
		<capability name="subcap" file="jadex.bdi.planlib.protocols.subscribe.Subscribe"/>
	</capabilities>

	<beliefs>
		<!-- The filter for deciding which request messages are handled in this capability. -->
		<beliefref name="rp_filter">
			<concrete ref="reqcap.rp_filter"/>
		</beliefref>
		
		<!-- Mapping of agent IDs to client proxies. -->
		<belief name="client_proxies" class="Map">
			<fact>Collections.synchronizedMap(new HashMap())</fact>
		</belief>
		
		<!-- Connection heartbeat timers. -->
		<belief name="heartbeat_timers" class="Map">
			<fact>Collections.synchronizedMap(new HashMap())</fact>
		</belief>
		
		<!-- Timeout for connected clients (in ms) -->
		<belief name="client_timeout" class="Long">
			<fact>new Long(5000)</fact>
		</belief>
	</beliefs>

	<goals>
		<querygoalref name="rp_decide_request">
			<concrete ref="reqcap.rp_decide_request"/>
		</querygoalref>
		<achievegoalref name="rp_execute_request">
			<concrete ref="reqcap.rp_execute_request"/>
		</achievegoalref>
		
		<performgoal name="purge_silent_clients" retry="true" retrydelay="1000" exclude="never" />
	</goals>

	<plans>
		<!-- Handle authentication requests. -->
		<plan name="auth_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestAuthPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestAuth</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle deauthentication requests. -->
		<plan name="deauth_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestDeAuthPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestDeAuth</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle capabilities requests. -->
		<plan name="capabilities_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestCapabilitiesPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestCapabilities</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle process start requests. -->
		<plan name="process_start_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestProcessStartPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestProcessStart</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle workitem list requests. -->
		<plan name="workitem_list_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestWorkitemListPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestWorkitemList</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle activity list requests. -->
		<plan name="activity_list_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestActivityListPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestActivityList</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle begin activity requests. -->
		<plan name="begin_activity_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestBeginActivityPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestBeginActivity</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle cancel activity requests. -->
		<plan name="cancel_activity_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestCancelActivityPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestCancelActivity</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle finish activity requests. -->
		<plan name="finish_activity_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestFinishActivityPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestFinishActivity</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle workitem event subscription requests. -->
		<plan name="start_workitem_subscription_plan">
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="sp_start_subscription.initiator"/>
			</parameter>
			<parameter name="subscription_id" class="Object">
				<goalmapping ref="sp_start_subscription.subscription_id"/>
			</parameter>
			<body class="StartWorkitemSubscriptionPlan" />
			<trigger>
				<goal ref="subcap.sp_start_subscription">
					<match>$goal.getParameter("subscription").getValue() instanceof SubscribeWorkitemEvents</match>
				</goal>
			</trigger>
		</plan>
		
		<!-- Handle activity event subscription requests. -->
		<plan name="start_activity_subscription_plan">
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="sp_start_subscription.initiator"/>
			</parameter>
			<parameter name="subscription_id" class="Object">
				<goalmapping ref="sp_start_subscription.subscription_id"/>
			</parameter>
			<body class="StartActivitySubscriptionPlan" />
			<trigger>
				<goal ref="subcap.sp_start_subscription">
					<match>$goal.getParameter("subscription").getValue() instanceof SubscribeActivityEvents</match>
				</goal>
			</trigger>
		</plan>
		
		
		<!-- Handle Heartbeat requests. -->
		<plan name="perform_heartbeat_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<!-- The requesting agent. -->
			<parameter name="initiator" class="jadex.bridge.IComponentIdentifier">
				<goalmapping ref="rp_execute_request.initiator"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestPerformHeartbeatPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof PerformHeartbeat</match>
				</goal>
			</trigger>
		</plan>
		
		
		
		<!-- Handle proxy requests. -->
		<plan name="proxy_request_plan">
			<parameter name="action" class="Object">
				<goalmapping ref="rp_execute_request.action"/>
			</parameter>
			<parameter name="result" class="Object" direction="out">
				<goalmapping ref="rp_execute_request.result"/>
			</parameter>
			<body class="RequestProxyPlan" />
			<trigger>
				<goal ref="rp_execute_request">
					<match>$goal.getParameter("action").getValue() instanceof RequestProxy</match>
				</goal>
			</trigger>
		</plan>
		
		
		<!-- Purge clients that fail to send heartbeats. -->
		<plan name="purge_silent_clients_plan">
			<body class="PurgeSilentClientsPlan" />
			<trigger>
				<goal ref="purge_silent_clients"/>
			</trigger>
		</plan>
	</plans>

	<events>
	</events>

	<expressions>
	</expressions>

	<properties>
		<property name="servicedescription">
 			((IDF)$scope.getServiceContainer().getService(IDF.class))
				.createDFServiceDescription(SWfms.SERVICE_NAME_CLIENT_INTERFACE, SWfms.SERVICE_TYPE_EXTERNAL, "")
		</property>

		<property name="agentdescription">
			((IDF)$scope.getServiceContainer().getService(IDF.class))
				.createDFAgentDescription(null, (IDFServiceDescription)$propertybase.getProperty("servicedescription"))	
		</property>
	</properties>

	<configurations>
		<configuration name="default">
			<beliefs>
				<initialbelief ref="rp_filter">
					<fact>jadex.commons.IFilter.ALWAYS</fact>
				</initialbelief>
			</beliefs>
			<goals>
				<initialgoal ref="purge_silent_clients" />
				<initialgoal ref="dfcap.df_keep_registered">
					<parameter ref="description">
						<value>
							(IDFAgentDescription)$propertybase.getProperty("agentdescription")
						</value>
					</parameter>
				</initialgoal>
			</goals>
		</configuration>
	</configurations>

</agent>

