<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sourceforge.jadex</groupId>
	<artifactId>jadex-android-dist</artifactId>
	<packaging>pom</packaging>
	<version> 2.3-SNAPSHOT </version>
	<name>jadex-android-dist</name>

	<!-- ======== common plugin configurations ======== -->

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<archiverConfig>
						<duplicateBehavior>skip</duplicateBehavior>
					</archiverConfig>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- ======== Modules to include in deploy/dist ======== -->

	<modules>
		<module>jadex-android-parent</module>
		<module>jadex-android-antlr</module>
		<module>jadex-android-xmlpull</module>
		<module>jadex-runtimetools-android</module>
		<module>jadex-platform-extension-webservice-android</module>
	</modules>

	<profiles>
		<!-- ======== Profile for dist assembly ======== -->
		<profile>
			<id>dist</id>
			<build>
				<finalName>jadex-android-${project.version}</finalName>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>jadex-android-example-project</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>jadex-android-example-projects</finalName>
									<descriptors>
										<descriptor>src/main/assembly/dist-assembly-androidexampleprojectzip.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
							<execution>
								<id>sources</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>sources</finalName>
									<descriptors>
										<descriptor>src/main/assembly/dist-assembly-androidsrczip.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/dist-assembly-android.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>groovy-maven-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>
									println "Generating .jar.properties files ...";
									def arr = "${project.modules}";
									def ln = System.getProperty('line.separator')
									
									arr = arr[1 .. -2].replaceAll(" ","").replaceFirst(",docs/.*","").tokenize(',');
									arr.each() {
										module ->
										def fileName = "./" + module + "/target/" + module + "-${project.version}.jar.properties";
										def f = new File(fileName);
										<![CDATA[
										if (f.getParentFile().exists() && f.getParentFile().isDirectory()) {
											f.asWritable().write("src=sources.zip");	
											println fileName;
										}
										]]>
									};
									</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<modules>
				<!-- Additional Jadex modules -->
				<module>jadex-parent</module>
				<module>jadex-commons</module>
				<module>jadex-bridge</module>
				<module>jadex-javaparser</module>
				<module>jadex-xml</module>
				<module>jadex-rules</module>
				<module>jadex-rules-eca</module>
				<module>jadex-kernel-base</module>
				<module>jadex-kernel-micro</module>
				<module>jadex-kernel-component</module>
				<module>jadex-kernel-bdi</module>
				<module>jadex-kernel-bpmn</module>
				<!-- need to decouple UI for BDIBPMN in android -->
<!-- 				<module>jadex-kernel-bdibpmn</module> -->
				<module>jadex-platform</module>
				<module>jadex-platform-extension-webservice</module>

				<!-- skipped in assembly -->
				<module>jadex-applications-android-demos</module>

				<!-- Modules required for integration test -->
				<module>jadex-android-integration-test</module>
				<!-- skipped in assembly -->
				<module>docs/android/jadex-android-example-project-maven</module>
			</modules>
		</profile>
	</profiles>
</project>
