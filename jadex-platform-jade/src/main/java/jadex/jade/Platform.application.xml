<?xml version="1.0" encoding="UTF-8"?>
<!--
  JADE platform properties.
-->
<applicationtype xmlns="http://jadex.sourceforge.net/jadex-application"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-application
						http://jadex.sourceforge.net/jadex-application-2.0.xsd"
	name="Platform" package="jadex.jade">
	
	<imports>
		<import>jadex.jade.service.*</import>
		<import>java.util.*</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.library.*</import>
		<import>jadex.commons.service.clock.*</import>
		<import>jadex.commons.service.threadpool.*</import>
		<import>jadex.commons.service.execution.*</import>
		<import>jadex.commons.concurrent.*</import>
		<import>jadex.application.*</import>
		<import>jadex.application.space.envsupport.*</import>
		<import>jadex.application.space.agr.*</import>
		<import>jadex.bridge.*</import>
		<import>jadex.base.fipa.*</import>
		<import>jadex.base.service.remote.*</import>
	</imports>
	
	<componenttypes>
		<componenttype filename="jadex/micro/KernelMicro.application.xml" name="kernel_micro"/>
		<componenttype filename="jadex/bdi/KernelBDI.application.xml" name="kernel_bdi"/>
		<componenttype filename="jadex/bdibpmn/KernelBDIBPMN.application.xml" name="kernel_bdibpmn"/>
		<componenttype filename="jadex/bpmn/KernelBPMN.application.xml" name="kernel_bpmn"/>
		<componenttype filename="jadex/base/service/remote/RemoteServiceManagementAgent.class" name="rms"/>
		<componenttype filename="jadex/base/service/awareness/AwarenessAgent.class" name="awa"/>

		<componenttype filename="jadex/tools/jcc/JCC.agent.xml" name="jcc"/>
	</componenttypes>
	
	<services>
		<providedservice class="ILibraryService" direct="true">
			new LibraryService($args.libpath, $component.getServiceProvider(), 
				SUtil.createHashMap(new Object[]{"componentviewer.viewerclass", RemoteServiceManagementService.REMOTE_EXCLUDED}, 
				new Object[]{"jadex.base.gui.componentviewer.libservice.LibServiceBrowser", new String[]{"getClassLoader"}})
				)
		</providedservice>
	
		<providedservice  class="IComponentManagementService" direct="true">
			new ComponentManagementService($component.getExternalAccess(), $component.getComponentAdapter())
		</providedservice>
		
		<providedservice class="IComponentFactory" direct="true">
			new ApplicationComponentFactory(
				new Set[]
				{
					MEnvSpaceType.getXMLMapping(),
					MAGRSpaceType.getXMLMapping()
				}, 
				$component.getServiceProvider()
			)		
		</providedservice>
		
		<providedservice class="IMessageService" direct="true">
			new MessageService($component.getServiceProvider(),
				new MessageType[]
				{
					new FIPAMessageType()
				})
		</providedservice>
		
		<providedservice class="IThreadPool" direct="true">
			new ThreadPoolService(new ThreadPool(new DefaultThreadPoolStrategy(0, 20, 30000, 0)), $component.getServiceProvider())
		</providedservice>
		
		<providedservice class="IClockService" direct="true">
			 new ClockService(new ClockCreationInfo(IClock.TYPE_SYSTEM, "simulation_clock", System.currentTimeMillis(), 100), $component.getServiceProvider(),
				SUtil.createHashMap(new Object[]{RemoteServiceManagementService.REMOTE_UNCACHED}, 
				new Object[]{new String[]{"getState", "getTime", "getTick", "getStarttime", "getDelta", "getDilation", "getNextTimer", "getTimers", "getClockType", "advanceEvent"}}))
		</providedservice>
		
		<providedservice class="IExecutionService" direct="true">
			 new ExecutionService($component.getServiceProvider(), SUtil.createHashMap(new Object[]{
				RemoteServiceManagementService.REMOTE_UNCACHED}, new Object[]{new String[]{"isIdle", "getTasks"}}))
		</providedservice>
		
	</services>
	
	<applications>
		<application name="all kernels">
			<components>
				<component name="kernel_micro" type="kernel_micro" daemon="true"/>
				<!-- <component type="kernel_bdi" daemon="true"/> -->
				<component name="kernel_bdibpmn" type="kernel_bdibpmn" daemon="true"/>
				<component name="kernel_bpmn" type="kernel_bpmn" daemon="true"/>
				<component name="rms" type="rms" daemon="true"/>
				<component name="awa" type="awa"/>
				<component name="jcc" type="jcc"/>
			</components>
		</application>
	</applications>
</applicationtype>
