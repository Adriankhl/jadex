<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.sourceforge.jadex</groupId>
	<artifactId>jadex-rules</artifactId>
	<packaging>jar</packaging>
	<version>2.0-rc6</version>
	<name>jadex-rules</name>
	<url>http://jadex.sourceforge.net</url>

	<description>
		Jadex Rules is a small lightweight rule engine, which currently
		employs the well-known Rete algorithm for highly efficient rule
		matching. Jadex rules is therefore similar to other rule engines
		like JESS and Drools. Despite the similarities there are also
		important differences between these systems:
		* Jadex Rules is very small and
		  intended to be used as component
		  of other software. Even though rules can be specified in a Java
		  dialect as well as (a small variation of) the CLIPS language
		  its primary usage is on the API level. Jadex Rules is currently
		  the core component of the Jadex BDI reasoning engine.
		* Jadex Rules cleanly separates between state and rule representation.
		  This allows the state implementation as well as the matcher to be
		  flexibly exchanged. Some experiments have e.g. been conducted with
		  a Jena representation. Regarding the matcher, it is planned to
		  support also the Treat algorithm, which has a lower memory footprint
		  than Rete.
		* Jadex Rules pays close attention to rule debugging. The state as
		  well as the rete engine can be observed at runtime. The rule debugger
		  provides functionalities to execute a rule program stepwise and also
		  use rule breakpoints to stop the execution at those points.
	</description>

	<licenses>
		<license>
			<name>LGPL License</name>
			<url>http://jadex-agents.informatik.uni-hamburg.de/xwiki/bin/view/Download/License
			</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>alex</id>
			<name>Alexander Pokahr</name>
			<email>pokahr@gmx.net</email>
			<url>http://vsis-www.informatik.uni-hamburg.de/members/info.php/84
			</url>
			<organization>University of Hamburg</organization>
			<organizationUrl>http://vsis-www.informatik.uni-hamburg.de/
			</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>

		<developer>
			<id>lars</id>
			<name>Lars</name>
			<email>braubach@gmx.net</email>
			<url>http://vsis-www.informatik.uni-hamburg.de/members/info.php/80
			</url>
			<organization>University of Hamburg</organization>
			<organizationUrl>http://vsis-www.informatik.uni-hamburg.de/
			</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<url>http://jadex.svn.sourceforge.net/viewvc/jadex/</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>http://oss.sonatype.org/service/local/staging/deploy/maven2/
			</url>
		</repository>
	</distributionManagement>

	<!--
		<parent> <groupId>net.sourceforge.jadex</groupId>
		<artifactId>jadex-settings</artifactId>
		<version>${jadexVersion}</version>
		<relativePath>../src/main/config/jadex-settings-pom.xml</relativePath>
		</parent>
	-->

	<properties>
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
  	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/.svn/*</exclude>
				</excludes>
			</resource><!-- 
			<resource>
				<directory>src/test/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/.svn/*</exclude>
				</excludes>
			</resource> -->
		</resources>

		<plugins>
			<!-- Java 1.6 javax.xml.stream.* -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
        		<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
        		<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-javadoc-plugin</artifactId>
        		<version>2.7</version>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
        	</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>install</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>net.sourceforge.jadex</groupId>
			<artifactId>jadex-commons</artifactId>
			<version>2.0-rc6</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.jadex</groupId>
			<artifactId>jadex-xml</artifactId>
			<version>2.0-rc6</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.1.3</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
