<?xml version="1.0" encoding="UTF-8"?>

	<!--
		Document : AutomatedSimulation.xml Created on : 17. Dezember 2009,
		17:25 Updated on: 15-1-10, 19h Author : vilenica Description: Purpose
		of the document follows.
	-->
<!-- Do NOT Change Name of Configuration! -->
<SimulationConfiguration name="BikeSharingWashington"
	applicationReference="..\\sodekovs-applications\\target\\classes\\sodekovs\\bikesharing\\examples\\BikesharingSimulation.application.xml"
	applicationConfiguration="Washington"
	nameOfSpace="my2dspace"
	description="My Simulation Setup Description">

	<Imports>
		<Import>jadex.extension.envsupport.evaluation.*</Import>
		<Import>jadex.simulation.evaluation.*</Import>		
		<Import>java.lang.String</Import>
	</Imports>

	<Dataproviders>
		<Dataprovider name="BikestationsLogger">
			<Source name="$bikestation" sourcetype="ISpaceObject" objecttype="bikestation"/> 						
			<Data name="stock">$bikestation.stock</Data>				
			<Data name="stationID">$bikestation.stationID</Data>
			<Data name="time">$tick</Data>							
		</Dataprovider>
		
		<!-- PROVIDERS for DeCoMas Eval Stats -->		
		<Dataprovider name="AdaptationLogger">
			<Source name="$adaptation" sourcetype="ISpaceObject" objecttype="adaptation"/> 						
			<Data name="votingAttempts">$adaptation.votingAttempts</Data>				
			<Data name="adaptations">$adaptation.adaptations</Data>
			<Data name="failures">$adaptation.failures</Data>							
		</Dataprovider>
		<Dataprovider name="SuperStationCoordination">
			<Source name="$superStationCoordination" sourcetype="ISpaceObject" objecttype="superStationCoordination"/> 						
			<Data name="polling">$superStationCoordination.polling</Data>				
			<Data name="alternative">$superStationCoordination.alternative</Data>
			<Data name="reply">$superStationCoordination.reply</Data>							
		</Dataprovider>
		<Dataprovider name="TupleCoordination">
			<Source name="$tupleCoordination" sourcetype="ISpaceObject" objecttype="tupleCoordination"/> 						
			<Data name="stateChanged">$tupleCoordination.stateChanged</Data>													
		</Dataprovider>
		<Dataprovider name="DecentralizedPollingCoordination">
			<Source name="$decentralizedPollingCoordination" sourcetype="ISpaceObject" objecttype="decentralizedPollingCoordination"/> 						
			<Data name="request">$decentralizedPollingCoordination.request</Data>				
			<Data name="reply">$decentralizedPollingCoordination.reply</Data>									
		</Dataprovider>
			
		
		<!-- New Provider! Test -->
		<!-- <Dataprovider name="bikesharingStatistics">
			<Source name="$bikestation" objecttype="bikestation" sourcetype="ISpaceObject" aggregate="true"/>
			<Data name="ore_amount">$bikestation.stock</Data>
			<Data name="time">$tick</Data>
		</Dataprovider> -->
	</Dataproviders>

	<Dataconsumers>
		<!-- <Dataconsumer name="homebaseConsumer" clazz="XYChartDataConsumer">
				<Property name="dataprovider">"homebaselogger2"</Property>
				<Property name="title">"One random station"</Property>
				<Property name="labelx">"Time"</Property>
				<Property name="labely">"Collected Food"</Property>							
				<Property name="seriesname_0">"Collected Food"</Property>
				<Property name="valuex_0">"time"</Property>
				<Property name="valuey_0">"ore_amount"</Property>
		</Dataconsumer>
		<Dataconsumer name="homebaseConsumerReloaded" clazz="XYChartDataConsumer">
				<Property name="dataprovider">"homebaselogger2"</Property>
				<Property name="title">"Evaluation of nest"</Property>				
				<Property name="labelx">"Collected Food"</Property>			
				<Property name="labely">"Time"</Property>				
				<Property name="seriesname_0">"Collected Food"</Property>				
				<Property name="valuex_0">"ore_amount"</Property>
				<Property name="valuey_0">"time"</Property>
		</Dataconsumer> -->
		
		<!-- New Consumer! Test! -->
		<!-- <Dataconsumer name="bikestationConsumer" clazz="XYChartDataConsumer">
				<Property name="dataprovider">"bikesharingStatistics"</Property>
				<Property name="title">"NEW Evaluation of nest"</Property>				
				<Property name="labelx">"NEW Collected Food"</Property>			
				<Property name="labely">"NEW Time"</Property>				
				<Property name="seriesname_0">"Collected Food"</Property>				
				<Property name="valuex_0">"ore_amount"</Property>
				<Property name="valuey_0">"time"</Property>
		</Dataconsumer> -->
		<Dataconsumer name="simConsumer" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"BikestationsLogger"</Property>
				<!-- If there is more than one instance of this object that should be observed, than this String denotes the ID of the object to be distinguished. -->
				<Property name="multipleInstanceId">"stationID"</Property>
				<!-- Complex Event: the observed event contains several properties, not just one -->
				<Property name="isComplexEvent">"stationID"</Property>				
				<Property name="time" filter="last"/><!-- HACK: Denotes the filter type ->last= only the last value is of interest. --> 
		</Dataconsumer>
			<Dataconsumer name="simConsumerAdapt" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"AdaptationLogger"</Property>								
				<Property name="votingAttempts" /> 
				<Property name="adaptations" />
				<Property name="failures" />				
		</Dataconsumer>
		<!-- CONSUMERS for DeCoMas Eval Stats -->
		<Dataconsumer name="simConsumerAdapt" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"AdaptationLogger"</Property>								
				<Property name="votingAttempts" /> 
				<Property name="adaptations" />
				<Property name="failures" />				
		</Dataconsumer>
		<Dataconsumer name="superStationCoordinationConsumer" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"SuperStationCoordination"</Property>								
				<Property name="polling" /> 
				<Property name="alternative" />
				<Property name="reply" />				
		</Dataconsumer>		
		<Dataconsumer name="tupleCoordinationConsumer" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"TupleCoordination"</Property>								
				<Property name="stateChanged" /> 								
		</Dataconsumer>		
		<Dataconsumer name="decentralizedPollingCoordinationConsumer" clazz="SimulationDataConsumer">		
				<Property name="dataprovider">"DecentralizedPollingCoordination"</Property>								
				<Property name="request" /> 
				<Property name="reply" />							
		</Dataconsumer>			
	</Dataconsumers>

	<DataVisualization>
		<Input>Reference to a data-field of the observers</Input>
		<Function name="MeanValue" aggregate="all" />
		<!-- DiagramType, Aggregation of different data, text on x/y-axis-->
	</DataVisualization>

	<!-- Optional: -->
	<Persist>
		<!-- Options: Wich filenName, Type, DB-Connector etc.-->
	</Persist>
	
	<Optimization/>		
	

	

	<RunConfiguration>
		<General rows="1" parallelRuns="1" delta="true"><!-- For all runs.-->
			<!-- Delay of start time can be defined relatively or absolute.-->
			<!-- <StartTime value="2010-06-29 10:50:00" type="absolute" /> -->
			<!--<StartTime value="6500" type="relative" />-->

			<!--
				delta=um bei paralleler AusfÃ¼hrung zu Verhindern, dass Seeds von
				Randoms gleich sind.
			-->
			<!-- <TerminateCondition>
				<Time value="17000" type="absolute" />
			</TerminateCondition> -->
		</General>
		<Rows experiments="1">
			<TerminateCondition>
				 <Time value="1441" type="tick_based" /><!-- relatively, absolute or tick_based -->
				
					<!-- <TargetFunction function="$object.getProperty(&quot;stock&quot;) >=
					30">	<ObjectSource type="ISpaceObject" name="bikestation" /> </TargetFunction> -->
				
				<!--
					<TargetFunction function="$beliefbase.tmpCounter>= 13">
					<ObjectSource type="BDIAGENT" name="Sentry" /> </TargetFunction>
				-->
			</TerminateCondition>
		</Rows>
	</RunConfiguration>
</SimulationConfiguration>