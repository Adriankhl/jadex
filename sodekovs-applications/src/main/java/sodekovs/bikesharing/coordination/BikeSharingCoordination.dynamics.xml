<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<MASDynamic name="bikeSharing">
	<!--
		Responsible for the coordination within the Bike Sharing Simulation.
	-->

	<!--
		System Properties: Definitions of the behaviors that agents can adopt
		and that makes them: - engage in coordinative activities - react to
		coordinative activities
	-->
	<system_properties>
		<role_occupations>
		<!-- The roles required for the coordination of new detected targets. -->
			<role_occupation name="super_station" multiple="true">
				<agent id="Bikestation">
				    <constraints>
				        <condition name="isSuperStation">
				           $beliefbase.isSuperStation
				        </condition>
				    </constraints>
				</agent>
			</role_occupation>
			<role_occupation name="cluster_station" multiple="true">
				<agent id="Bikestation"/>							
			</role_occupation>
		</role_occupations>
	</system_properties>


	<!--
		Causal links: Definition of the interdependencies between
		agent-behaviors.
	-->
	<causalities>
		<deco_links>
			<!-- The link where the super stations polls its cluster stations. -->
			<deco_link realization="poll_cluster_stations" type="POSITIVE" name="poll_cluster_stations" spaces="mycoordspace">
				<froms>
					<from>super_station</from>
				</froms>
				<tos>
					<to>cluster_station</to>
				</tos>
			</deco_link>
			
			<!-- The link where the cluster stations informs the super station about its stocks and capacities. -->
			<deco_link realization="reply_cluster_stations" type="POSITIVE" name="reply_cluster_stations" spaces="mycoordspace">
				<froms>
					<from>cluster_station</from>
				</froms>
				<tos>
					<to>super_station</to>
				</tos>
			</deco_link>
			
			<!-- The link where the super station informs its cluster stations about the alternative proposed stations. -->
			<deco_link realization="inform_alternatives" type="POSITIVE" name="inform_alternatives" spaces="mycoordspace">
				<froms>
					<from>super_station</from>
				</froms>
				<tos>
					<to>cluster_station</to>
				</tos>
			</deco_link>	
			
			<!-- The link where cluster stations lay tupel information about their changed occupany in the mechanism
				and the mechanism informs other cluster stations if the require alternative arrival and departure station information. -->
			<deco_link realization="tuple_information" type="POSITIVE" name="tuple_information" spaces="mycoordspace">
			    <froms>
			        <from>cluster_station</from>
			    </froms>
			    <tos>
			        <to>cluster_station</to>
			    </tos>
			</deco_link>
			
			<!-- The link where cluster stations request the occupancy of all other stations in the same cluster when their state has changed -->
			<deco_link realization="decentralized_polling_request" type="POSITIVE" name="decentralized_polling_request" spaces="mycoordspace">
			    <froms>
			        <from>cluster_station</from>
			    </froms>
			    <tos>
			        <to>cluster_station</to>
			    </tos>
			</deco_link>
			
			<!-- The according reply to the previous request -->
			<deco_link realization="decentralized_polling_reply" type="POSITIVE" name="decentralized_polling_reply" spaces="mycoordspace">
			    <froms>
			        <from>cluster_station</from>
			    </froms>
			    <tos>
			        <to>cluster_station</to>
			    </tos>
			</deco_link>
		</deco_links>

		<!-- The detailed configuration of interdependency enactment. -->
		<deco-link-realizations>
			<!-- The link where the super stations polls its cluster stations. -->
			<realization id="poll_cluster_stations">
				<from>
					<agent_element element="poll_cluster_stations" agent_id="Bikestation" type="INTERNAL_EVENT">					
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</from>
				<!-- Coordination Medium configuration: -->
				<mechanism_configuration
					mechanism_id="sodekovs.bikesharing.coordination.ClusterMechanism"
					agent_type="JADEX">
					<properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
				</mechanism_configuration>			
				<to>		
					 <agent_element element="gather_occupancy_rate" agent_id="Bikestation" type="INTERNAL_EVENT">
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</to>
				<active>true</active>
			</realization>
			
			<!-- The link where the cluster stations informs the super station about its stocks and capacities. -->
			<realization id="reply_cluster_stations">
				<from>
					<agent_element element="reply_cluster_stations" agent_id="Bikestation" type="INTERNAL_EVENT">					
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</from>
				<!-- Coordination Medium configuration: -->
				<mechanism_configuration
					mechanism_id="sodekovs.bikesharing.coordination.ClusterMechanism"
					agent_type="JADEX">
					<properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
				</mechanism_configuration>			
				<to>		
					 <agent_element element="calculate_proposed_stations" agent_id="Bikestation" type="INTERNAL_EVENT">
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</to>
				<active>true</active>
			</realization>
			
			<!-- The link where the super station informs its cluster stations about the alternative proposed stations. -->
			<realization id="inform_alternatives">
				<from>
					<agent_element element="inform_alternatives" agent_id="Bikestation" type="INTERNAL_EVENT">					
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</from>
				<!-- Coordination Medium configuration: -->
				<mechanism_configuration
					mechanism_id="sodekovs.bikesharing.coordination.ClusterMechanism"
					agent_type="JADEX">
					<properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
				</mechanism_configuration>			
				<to>		
					 <agent_element element="receive_alternatives" agent_id="Bikestation" type="INTERNAL_EVENT">
						<parameter_mappings>
							<mapping ref="coordData" name="coordData"/>
						</parameter_mappings>
					</agent_element>
				</to>
				<active>true</active>
			</realization>
			
			<!-- The link where cluster stations lay tupel information about their changed occupany in the mechanism
				and the mechanism informs other cluster stations if the require alternative arrival and departure station information. -->
			<realization id="tuple_information">
			    <from>
			        <agent_element element="changed_occupancy" agent_id="Bikestation" type="INTERNAL_EVENT">					
						<parameter_mappings>
							<mapping ref="tuple" name="tuple"/>
						</parameter_mappings>
					</agent_element>
			    </from>
			    <mechanism_configuration
					mechanism_id="sodekovs.bikesharing.coordination.TupleBasedMechanism"
					agent_type="JADEX">
			        <properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
				</mechanism_configuration>	
			    <to>
			        <agent_element element="inform_changed_occupancy" agent_id="Bikestation" type="INTERNAL_EVENT">
			            <parameter_mappings>
			                <mapping ref="tuple" name="tuple"/>
			            </parameter_mappings>
			        </agent_element>
			    </to>
			    <active>false</active>
			</realization>
			
			<!-- The link where cluster stations request the occupancy of all other stations in the same cluster when their state has changed -->
			<realization id="decentralized_polling_request">
			    <from>
			        <agent_element element="changed_state" agent_id="Bikestation" type="INTERNAL_EVENT">
			            <parameter_mappings>
			                <mapping ref="data" name="data"/>
			            </parameter_mappings>
			        </agent_element>
			    </from>
			    <mechanism_configuration
			        mechanism_id="sodekovs.bikesharing.coordination.DecentralizedPollingMechanism"
			        agent_type="JADEX">
			         <properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
			    </mechanism_configuration>
			    <to>
			        <agent_element element="decentralized_polling_request" agent_id="Bikestation" type="INTERNAL_EVENT">
			            <parameter_mappings>
			                <mapping ref="data" name="data"/>
			            </parameter_mappings>
			        </agent_element>
			    </to>
			    <active>false</active>
			</realization>
			
			<!-- The according reply to the previous request -->
			<realization id="decentralized_polling_reply">
			    <from>
			        <agent_element element="decentralized_polling_reply" agent_id="Bikestation" type="INTERNAL_EVENT">
			            <parameter_mappings>
			                <mapping ref="data" name="data"/>
			            </parameter_mappings>
			        </agent_element>
			    </from>
			    <mechanism_configuration
			        mechanism_id="sodekovs.bikesharing.coordination.DecentralizedPollingMechanism"
			        agent_type="JADEX">
			         <properties>
			        	<entry>
							<key>FULL_THRESHOLD</key>
							<value>0.75</value>
						</entry>
						<entry>
							<key>EMPTY_THRESHOLD</key>
							<value>0.1</value>
						</entry>
					</properties>
			    </mechanism_configuration>
			    <to>
			        <agent_element element="decentralized_polling_result" agent_id="Bikestation" type="INTERNAL_EVENT">
			            <parameter_mappings>
			                <mapping ref="data" name="data"/>
			            </parameter_mappings>
			        </agent_element>
			    </to>
			     <active>false</active>
			</realization>
		</deco-link-realizations>
	</causalities>
</MASDynamic>