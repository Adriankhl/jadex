<?xml version="1.0" encoding="UTF-8"?>
<agent xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="Bikestation" package="sodekovs.bikesharing.bikestation">

	<imports>
		<import>jadex.extension.envsupport.math.Vector2Int</import>
		<import>jadex.extension.envsupport.math.IVector2</import>
		<import>jadex.extension.envsupport.math.Vector2Double</import>		
		<import>jadex.extension.envsupport.environment.space2d.ContinuousSpace2D</import>
		<import>jadex.extension.envsupport.environment.ISpaceObject</import>
		<import>sodekovs.bikesharing.container.*</import>	
		<import>sodekovs.bikesharing.coordination.*</import>
		<import>deco4mas.distributed.coordinate.environment.*</import>	
		<import>jadex.commons.future.*</import>		
	</imports>
	
	<beliefs>
		<!-- Environment. -->
		<belief name="environment" class="ContinuousSpace2D"> 			
 			<fact class="IFuture">$scope.getParentAccess().getExtension("my2dspace")</fact>
 		</belief>
 		
		<!-- Environment. DO NOT CHANGE the name "env".-->
		<belief name="env" class="CoordinationSpace">
		    <fact class="IFuture">$scope.getParentAccess().getExtension("mycoordspace")</fact>
		</belief>
 		 		
 		<belief name="myself" class="ISpaceObject"> 			
 			<fact>$beliefbase.environment.getAvatar($scope.getComponentDescription(), $scope.getAgentModel().getFullName())</fact>
 		</belief> 
 		
 		<belief name="stationID" class="String">
 		    <fact class="IFuture">$beliefbase.myself.getProperty("stationID")</fact>
 		</belief>
 		
 		<belief name="capacity" class="Integer" updaterate="100" evaluationmode="pull">
 		     <fact class="IFuture">$beliefbase.myself.getProperty("capacity")</fact>
 		</belief>
 		
 		<belief name="stock" class="Integer" updaterate="100" evaluationmode="pull">
 		     <fact class="IFuture">$beliefbase.myself.getProperty("stock")</fact>
 		</belief>
 		
 		<belief name="position" class="Vector2Double">
 		    <fact class="IFuture">$beliefbase.myself.getProperty("position")</fact>
 		</belief>		
 		
 		<belief name="noClusterStations" class="Integer"/>
 		
		<!-- Used for SO. Which alternative departure station is proposed? -->
		<belief name="proposed_departure_station" class="String">
			<fact class="IFuture">$beliefbase.myself.getProperty("proposed_departure_station")</fact>
		</belief> 				
		
		<!-- Used for SO. Which alternative arrival station is proposed? -->
		<belief name="proposed_arrival_station" class="String">
			<fact class="IFuture">$beliefbase.myself.getProperty("proposed_arrival_station")</fact>
		</belief>
		
		<!-- Used for SO. Is it a SuperStation? They are used for DeCoMAS -->
		<belief name="isSuperStation" class="Boolean">
			<fact class="IFuture">$beliefbase.myself.getProperty("isSuperStation")</fact>
		</belief>
		
		<!-- Used for So. Stores the received replies from a poll request -->
		<beliefset name="receivedCoordData" class="ClusterStationCoordData"/>
		
		<!-- Used for So. Stores the received replies from a decentralized poll request -->
		<beliefset name="receivedDecentralizedCoordData" class="StateCoordinationStationData"/>
	</beliefs>
	
	<plans>
		<!-- Super station plan -->
		<plan name ="super_station_plan">
	    	<body class="SuperStationPlan"/>
		</plan>
		
		<plan name="gather_occupancy_plan">
		    <body class="GatherOccupancyPlan"/>
		    <parameter name="coordData" class="ClusterStationCoordData">
		        <internaleventmapping ref="gather_occupancy_rate.coordData"/>
		    </parameter>
		    <trigger>
		        <internalevent ref="gather_occupancy_rate"/>
		    </trigger>
		</plan>
		
		<plan name="calculate_proposed_stations">
		    <body class="CalculateProposedStationsPlan"/>
		    <parameter name="coordData" class="ClusterStationCoordData">
		        <internaleventmapping ref="calculate_proposed_stations.coordData"/>
		    </parameter>
		    <trigger>
		        <internalevent ref="calculate_proposed_stations"/>
		    </trigger>
		</plan>
		
		<plan name="receive_alternatives">
		    <body class="ReceiveAlternativesPlan"/>
		    <parameter name="coordData" class="ClusterStationCoordData">
		        <internaleventmapping ref="receive_alternatives.coordData"/>
		    </parameter>
		    <trigger>
		        <internalevent ref="receive_alternatives"/>
		    </trigger>
		</plan>
		
		<plan name="changed_occupancy">
		    <body class="ChangedOccupancyPlan"/>
		    <trigger>
		        <factchanged ref="stock"/>
		        <factchanged ref="capacity"/>
		    </trigger>
		</plan>
		
		<plan name="received_change_occupancy">
		    <body class="ReceivedChangedOccupancy"/>
		    <parameter name="tuple" class="CoordinationStationData">
		        <internaleventmapping ref="inform_changed_occupancy.tuple"/>
		    </parameter>
		    <trigger>
		        <internalevent ref="inform_changed_occupancy"/>
		    </trigger>
		</plan>
		
		<plan name="decentralized_changed_state">
		    <body class="DecentralizedChangedStatePlan"/>
		    <trigger>
		        <factchanged ref="stock"/>
		        <factchanged ref="capacity"/>
		    </trigger>
		</plan>
		
		<plan name="decentralized_polling_request">
		    <body class="DecentralizedPollingRequestPlan"/>
		    <parameter name="data" class="StateCoordinationStationData">
		        <internaleventmapping ref="decentralized_polling_request.data"/>
		    </parameter>
		    <trigger>
		        <internalevent ref="decentralized_polling_request"/>
		    </trigger>
		</plan>
		
		<plan name="decentralized_polling_result">
		    <body class="DecentralizedPollingResultPlan"/>
		    <parameter name="data" class="StateCoordinationStationData">
		        <internaleventmapping ref="decentralized_polling_result.data"/>
		    </parameter>
		    
		    <trigger>
		        <internalevent ref="decentralized_polling_result"/>
		    </trigger>
		</plan>
	</plans>
	
	<events>
	    <!-- DeCoMAS events for super station based cluster coordination -->
	    <!-- DeCoMAS event -->
	    <internalevent name="poll_cluster_stations">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="gather_occupancy_rate">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="reply_cluster_stations">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="calculate_proposed_stations">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="inform_alternatives">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="receive_alternatives">
	        <parameter name="coordData" class="ClusterStationCoordData"/>
	    </internalevent>
	    
	    <!-- DeCoMAS events for tuple based coordination mechanism  -->
	    <!-- DeCoMAS event -->
	    <internalevent name="changed_occupancy">
	        <parameter name="tuple" class="CoordinationStationData"></parameter>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="inform_changed_occupancy">
	        <parameter name="tuple" class="CoordinationStationData"></parameter>
	    </internalevent>
	    
	    <!-- DeCoMAS events for decentralized polling coordination mechanism  -->
	    <!-- DeCoMAS event -->
	    <internalevent name="changed_state">
	        <parameter name="data" class="StateCoordinationStationData"></parameter>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="decentralized_polling_request">
	        <parameter name="data" class="StateCoordinationStationData"></parameter>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="decentralized_polling_reply">
	        <parameter name="data" class="StateCoordinationStationData"></parameter>
	    </internalevent>
	    
	    <!-- DeCoMAS event -->
	    <internalevent name="decentralized_polling_result">
	        <parameter name="data" class="StateCoordinationStationData"></parameter>
	    </internalevent>
	</events>
	
	<configurations>
		<configuration name="default">		
			<plans>
				<initialplan ref="super_station_plan"/>
			</plans>
		</configuration>
	</configurations>

</agent>