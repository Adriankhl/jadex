<?xml version="1.0" encoding="UTF-8"?>
<!-- <H3>Demo for a antworld.<br> -->
<applicationtype xmlns="http://jadex.sourceforge.net/jadex"
	xmlns:agr="http://jadex.sourceforge.net/jadex-agrspace" xmlns:env="http://jadex.sourceforge.net/jadex-envspace"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-application-2.0.xsd
	                    http://jadex.sourceforge.net/jadex-agrspace 
	                    http://jadex.sourceforge.net/jadex-agrspace-2.0.xsd
	                    http://jadex.sourceforge.net/jadex-envspace 
	                    http://jadex.sourceforge.net/jadex-envspace-2.0.xsd"
	name="Antworld" package="sodekovs.antworld.example">

	<imports>
		<import>jadex.extension.envsupport.environment.space2d.*</import>
		<import>jadex.extension.envsupport.environment.DeltaTimeExecutor</import>		
		<import>jadex.extension.envsupport.math.*</import>
		<import>jadex.extension.envsupport.dataview.*</import>
		<import>jadex.extension.envsupport.observer.perspective.*</import>
		<import>jadex.extension.envsupport.evaluation.*</import>
		<import>jadex.extension.envsupport.evaluation.XYChartDataConsumer</import>
		<import>jadex.extension.envsupport.observer.gui.plugin.*</import>
		<import>java.text.SimpleDateFormat</import>
		<import>java.util.Date</import>		
		<import>sodekovs.antworld.movement.*</import>
		<import>sodekovs.antworld.ant.*</import>
		<import>sodekovs.antworld.env.*</import>
		<import>jadex.bridge.service.types.clock.IClockService</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.commons.future.*</import>
		<import>jadex.simulation.environment.*</import>
		<import>jadex.bridge.service.search.*</import>
		<import>java.util.HashMap</import>
		<import>java.lang.*</import>		
		<import>jadex.bdi.planlib.*</import>						
	</imports>

	<arguments>
		<!-- The mission time. -->
		<argument name="tmp_mission_time" class="String">"Init"</argument>
		<argument name="tmp_start_time" class="long"></argument>
		<argument name="al" class="int">new Integer(258)</argument>
		<argument name="simulationFacts" class="Map" />
		<!-- <argument name="nrr" typename="Int">new Integer(10)</argument> -->
		<argument name="SentryNumber" class="int">new Integer(10)</argument>
		<argument name="Experiment_id" class="String">"not set"</argument>
		<argument name="walkingStrategy" class="int">new Integer(0)</argument>
	</arguments>
	 
	<extensiontypes>		

		<env:envspacetype name="2dspace" class="ContinuousSpace2D"
			width="1" height="1">
			<env:objecttypes>
				<env:objecttype name="food">					
					<env:property name="food_pieces">0</env:property>
					<env:property name="text" dynamic="true">
						$object.getProperty("food_pieces")
						</env:property>					
				</env:objecttype>
				<env:objecttype name="ant">
					<env:property name="vision">0.07</env:property>
					<env:property name="vision_range">5</env:property>
					<env:property name="speed">0.05</env:property>
					<env:property name="position" dynamic="true">$space.getSpaceObjectsByType("nest")[0].getProperty("position")</env:property>
					<env:property name="has_food">false</env:property>
				</env:objecttype>				
				<env:objecttype name="nest">
					<env:property name="stock">0</env:property>
					<env:property name="capacity">150</env:property>
					<env:property name="text" dynamic="true">
						$object.getProperty("stock")
						</env:property>
				</env:objecttype>
				
				<!-- The size of the objects decreases as time goes by.-->
				<env:objecttype name="pheromone">
					<env:property name="strength">10</env:property>
					<env:property name="size" dynamic="true">
						$object.getProperty("strength") == null ? new
						Vector2Double(0.01,0.01) :
						new Vector2Double( Math.max(0.01,
						(($object.getProperty("strength"))/300.0)), Math.max(0.01, (
						($object.getProperty("strength"))/300.0) )) <!--
							new Vector2Double(0.5,0.5)
						-->
					</env:property>
				</env:objecttype>
				
				<!-- Ants cannot pass by these obstacles. -->
				<env:objecttype name="obstacle">					
					<env:property name="size">new Vector2Double(0.01,0.01)</env:property>
				</env:objecttype>
				
				<!-- Sign, that denotes the goal destination of the ant. -->
				<env:objecttype name="destination">					
					<env:property name="size">new Vector2Double(0.05,0.05)</env:property>
				</env:objecttype>
				
				
				<!-- Trace object. Depicts the way an agent has walked on. -->
				<env:objecttype name="trace">					
					<env:property name="position" dynamic="true">$space.getRandomPosition(Vector2Int.ZERO)</env:property>
				</env:objecttype>
				
				<!-- WalkingStrategy: Are the agents walking:
				a)"randomly", without remembering already visited positions. 
				b)"randomlyWithMemory", randomly, with remembering already visited positions.
				c)"randomlyWithMemoryWithGroup", randomly, with remembering already visited positions AND producer is calling carry as soon as he is informed AND Sentry is calling closest producer. 
				DEFAULT: "randomly"
				!!!!Confer WalkingStrategyEnum for Mapping of int values to semantics. -->
				<env:objecttype name="walkingStrategy">					
					<env:property name="strategy">0</env:property>
				</env:objecttype>
			</env:objecttypes>
			


			<env:avatarmappings>
				<env:avatarmapping componenttype="Ant"
					objecttype="ant" />				
			</env:avatarmappings>

			<env:tasktypes>
				<env:tasktype name="move" class="MoveTask" />
				<env:tasktype name="pickup" class="PickupFoodTask" />
				<env:tasktype name="drop" class="DropFoodTask" />				
			</env:tasktypes>			
			
			<env:processtypes>
				<env:processtype name="managePheromones" class="ManagePheromonesProcess">
					<env:property name="rate">1</env:property>
				</env:processtype>
				<env:processtype name="manageFoodSources" class="ManageFoodSourcesProcess">
					 <env:property name="rate">1</env:property>
				</env:processtype>
				<!-- Create obstacles on application start. Then to nothing. -->
				<env:processtype name="createObstacles" class="CreateObstaclesProcess">
					 <env:property name="rate">1</env:property>
				</env:processtype>
			</env:processtypes>
						
			
			<!-- The percepttypes, generators and processors. -->
			<env:percepttypes>
				<!--
					Percepttypes that the environment produces and agents can consume.
				-->
				<!-- TODO: disappear, etc..-->
				<env:percepttype name="food_appeared"
					objecttype="food" componenttype="Ant" />
				<env:percepttype name="food_disappeared"
					objecttype="food" componenttype="Ant" />
				<env:percepttype name="nest_appeared" objecttype="nest"
					componenttype="Ant" />
				<env:percepttype name="pheromone_appeared"
					objecttype="pheromone" componenttype="Ant" />
				<env:percepttype name="pheromone_disappeared"
					objecttype="pheromone" componenttype="Ant" />


				<!-- Percept generators define which percepts should be created -->
				<env:perceptgenerator name="visiongen"
					class="DefaultVisionGenerator">
					<!--  <env:property name="maxrange">10</env:property>-->
					<env:property name="range">10</env:property>
					<env:property name="range_property">
						"vision_range"</env:property>

					<!--
						percept types are declared with associated action types:
						percepttype, actiontype1, actiontype2, ...
					-->
					<env:property name="percepttypes"> new Object[] { new
						String[]{"food_appeared", "appeared", "created"}, new
						String[]{"food_disappeared", "disappeared", "destroyed"},new
						String[]{"nest_appeared", "appeared", "created"},new
						String[]{"pheromone_appeared", "appeared", "created"}, new
						String[]{"pheromone_disappeared", "disappeared", "destroyed"} }
					</env:property>
				</env:perceptgenerator>

				<!--
					Percept processors consume percepts and push them into the agents.
				-->
				<env:perceptprocessor componenttype="Ant"
					class="DefaultBDIVisionProcessor">
					<env:property name="percepttypes"> new Object[] { new
						String[]{"food_appeared", "add", "foodSources"}, new
						String[]{"food_disappeared", "remove", "foodSources"},new
						String[]{"nest_appeared", "add", "nests"},new
						String[]{"pheromone_appeared", "add", "pheromones"}, new
						String[]{"pheromone_disappeared", "remove", "pheromones"} }
					</env:property>
				</env:perceptprocessor>

			</env:percepttypes>
			
			

			<env:dataviews>
				<env:dataview name="all_view" class="GeneralDataView2D" />
			</env:dataviews>

			<env:perspectives>
				<env:perspective name="icons" class="Perspective2D"
					opengl="false">

					<!-- food -->
					<env:drawable objecttype="food" width="0.1" height="0.1">																		
						<env:texturedrectangle layer="0" imagepath="sodekovs/antworld/images/food.jpg" />
						<env:text layer="2" size="12" text="$text$" x="-0.15" y="-0.2"
							color="white" />
					</env:drawable>
									
					
					<env:drawable objecttype="nest" width="0.1" height="0.1">
						<env:texturedrectangle layer="1"
							imagepath="sodekovs/antworld/images/nest.jpg" />
						<env:text layer="2" size="12" text="$text$" x="-0.15" y="-0.2"
							color="black" />
					</env:drawable>
					

					<!-- Ant -->
					<env:drawable objecttype="ant" width="0.07" height="0.07">
						<env:property name="visionsize" dynamic="true">new Vector2Double($object.getProperty("vision").doubleValue()*2)</env:property>
						<env:ellipse layer="1" size="visionsize" abssize="true"
							color="#FAFA1E32" />
						<env:texturedrectangle layer="2"
							imagepath="sodekovs/antworld/images/ant.jpg" />
					</env:drawable>

					<env:drawable objecttype="pheromone" width="1.0"
						height="1.0">
						<env:texturedrectangle layer="0" size="size"
							imagepath="sodekovs/antworld/images/pheromone.png" />
					</env:drawable>
					
					<env:drawable objecttype="obstacle" width="1.0"
						height="1.0">
						<env:texturedrectangle layer="0" size="size"
							imagepath="sodekovs/antworld/images/obstacle.png" />
					</env:drawable>
					
					<env:drawable objecttype="destination" width="1.0"
						height="1.0">
						<env:texturedrectangle layer="0" size="size"
							imagepath="sodekovs/antworld/images/destination.png" />
					</env:drawable>
					
					<env:prelayers>
						<env:tiledlayer width="0.6" height="0.6"
							imagepath="sodekovs/antworld/images/meadow.jpg" />
					</env:prelayers>															
					
				</env:perspective>
			</env:perspectives>

			<!-- executor -->
			<!-- <env:spaceexecutor class="DeltaTimeExecutor4Simulation"> -->
				<env:spaceexecutor class="DeltaTimeExecutor">
				<env:property name="space">$space</env:property>
				<env:property name="tick">true</env:property>
			</env:spaceexecutor>
		</env:envspacetype>
	</extensiontypes>

	<componenttypes>
		<componenttype name="Ant"
			filename="sodekovs/antworld/ant/Ant.agent.xml" />
	</componenttypes>


	<properties>
		<property name="clock" class="IFuture">
			SServiceProvider.getService($component.getServiceProvider(),
			IClockService.class,RequiredServiceInfo.SCOPE_PLATFORM)
		</property>
	</properties>

	<configurations>
		<configuration name="FirstScenario">
			<extensions>			

				<env:envspace name="my2dspace" type="2dspace" width="1"
					height="1">
					<env:objects>
						<env:object type="nest">
							<env:property name="position">new Vector2Double(0.3, 0.3)</env:property>													
						</env:object>
						<env:object type="food">
							<env:property name="position">new Vector2Double(0.8, 0.5)</env:property>
							<env:property name="food_pieces">1</env:property>
						</env:object>
						<!-- <env:object type="food">
							<env:property name="position">new Vector2Double(0.6, 0.2)</env:property>
							<env:property name="food_pieces">2</env:property>
						</env:object>
						<env:object type="food">
							<env:property name="position">new Vector2Double(0.1, 0.6)</env:property>
							<env:property name="food_pieces">2</env:property>
						</env:object>-->
						
						<env:object type="walkingStrategy">					
							<env:property name="strategy">0</env:property>
						</env:object>
						
						
						<!--  Test pheromones for distance eval function. -->
						<!-- <env:object type="pheromone">
							<env:property name="position">new Vector2Double(0.6, 0.8)</env:property>
							<env:property name="strenght">15</env:property>
						</env:object>
						
						<env:object type="pheromone">
							<env:property name="position">new Vector2Double(0.6, 0.7)</env:property>
							<env:property name="strenght">15</env:property>
						</env:object>
						
						<env:object type="pheromone">
							<env:property name="position">new Vector2Double(0.5, 0.8)</env:property>
							<env:property name="strenght">15</env:property>
						</env:object>
						 
						<env:object type="pheromone">
							<env:property name="position">new Vector2Double(0.7, 0.7)</env:property>
							<env:property name="strenght">15</env:property>
						</env:object>-->
						
						<!-- obstacles -->
						<!--<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.2)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.3)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.4)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.5)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.6)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.7)</env:property>
						</env:object>
						<env:object type="obstacle">
							<env:property name="position">new Vector2Double(0.6, 0.8)</env:property>
						</env:object>-->
						
					</env:objects>
					
					<env:processes>
						<env:process type="managePheromones">
						<env:property name="rate">8</env:property>
						</env:process>			
				 		<env:process type="manageFoodSources">
							<env:property name="rate">1</env:property> 
						</env:process>
						<env:process type="createObstacles">
							<env:property name="rate">1</env:property> 
						</env:process>
					</env:processes>
			
					<env:observers>
						<env:observer name="AntWorld" dataview="view_all"
							perspective="icons">
						</env:observer>
					</env:observers>
				</env:envspace>
			</extensions>
			<components>
				<component type="Ant" number="1" />
			</components>							
		</configuration>

	</configurations>

</applicationtype>
