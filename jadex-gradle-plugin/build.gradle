//ext.props = new Properties()
//props.load(new FileReader(file("../gradle.properties")))

apply plugin: 'groovy'

dependencies {
    compile gradleApi()
    compile localGroovy()

//    compile 'net.sourceforge.jadex:jadex-kernel-bdiv3:' + props.jadex_build_version

    compile project(':jadex-kernel-bdiv3')
    compile 'com.android.tools.build:gradle:1.3.0'
    compile 'commons-io:commons-io:2.4'
}

group = 'net.sourceforge.jadex'
version = gradleplugin_build_version

//apply plugin: 'maven'

test.testLogging.showStandardStreams = true

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    gradlePluginArchives
}
//
//task gradlePluginJar(type: Jar, dependsOn: 'classes') {
//    baseName "jadex-gradle-plugin"
//    from sourceSets.main.output
//}
//
//artifacts {
//    gradlePluginArchives gradlePluginJar
//}

artifacts {
    archives jar
}

// upload task for gradle plugin and its dependencies
uploadGradlePluginArchives {
    repositories {
        repositories.mavenDeployer {
            beforeDeployment
                    {
                        MavenDeployment deployment -> signing.signPom(deployment)
                    }

            snapshotRepository(url: reposnapshoturl)
                    {
                        authentication(userName: repouser, password: repopassword)
                    }
            repository(url: "http://oss.sonatype.org/service/local/staging/deploy/maven2/")
                    {
                        authentication(userName: repouser, password: repopassword)
                    }
        }
    }
}

// add dependencies -> upload them when uploadgradlePluginArchives executes
uploadGradlePluginArchives.dependsOn = \
 [project(':jadex-kernel-bdiv3').uploadArchives,
  project(':jadex-kernel-component').uploadArchives,
  project(':jadex-xml').uploadArchives,
  project(':jadex-kernel-base').uploadArchives,
  project(':jadex-kernel-micro').uploadArchives,
  project(':jadex-bridge').uploadArchives,
  project(':jadex-rules-eca').uploadArchives,
  project(':jadex-commons').uploadArchives,
  project(':jadex-javaparser').uploadArchives,
  uploadArchives
]